openapi: 3.1.0
info:
  title: CZERTAINLY ACME API
  description: REST API for managing ACME Profiles and ACME Accounts in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.15.2-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: https://demo.czertainly.online/api
  description: CZERTAINLY Demo server
tags:
- name: ACME Account Management
  description: ACME Account Management API
- name: ACME Profile Management
  description: ACME Profile Management API
paths:
  /v1/acmeProfiles/{uuid}:
    get:
      tags:
      - ACME Profile Management
      summary: Get details of ACME Profile
      operationId: getAcmeProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ACME Profile details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcmeProfileDto"
        "404":
          description: ACME Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
    put:
      tags:
      - ACME Profile Management
      summary: Edit ACME Profile
      operationId: editAcmeProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcmeProfileEditRequestDto"
        required: true
      responses:
        "200":
          description: ACME Profile updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcmeProfileDto"
        "404":
          description: ACME Profile or RA profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
    delete:
      tags:
      - ACME Profile Management
      summary: Delete ACME Profile
      operationId: deleteAcmeProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ACME Profile deleted
        "404":
          description: ACME Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeAccounts/revoke:
    put:
      tags:
      - ACME Account Management
      summary: Revoke multiple ACME Accounts
      operationId: bulkRevokeAcmeAccount
      requestBody:
        description: ACME Account UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: ACME Accounts revoked
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles:
    get:
      tags:
      - ACME Profile Management
      summary: Get list of ACME Profiles
      operationId: listAcmeProfiles
      responses:
        "200":
          description: ACME Profile list retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcmeProfileListDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
    post:
      tags:
      - ACME Profile Management
      summary: Create ACME Profile
      operationId: createAcmeProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcmeProfileRequestDto"
        required: true
      responses:
        "201":
          description: ACME Profile created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UuidDto"
        "404":
          description: RA Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{acmeProfileUuid}/acmeAccounts/{acmeAccountUuid}:
    get:
      tags:
      - ACME Account Management
      summary: Details of ACME Account
      operationId: getAcmeAccount
      parameters:
      - name: acmeProfileUuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      - name: acmeAccountUuid
        in: path
        description: ACME Account UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ACME Account details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcmeAccountResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
    post:
      tags:
      - ACME Account Management
      summary: Revoke ACME Account
      operationId: revokeAcmeAccount
      parameters:
      - name: acmeProfileUuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      - name: acmeAccountUuid
        in: path
        description: ACME Account UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ACME Account revoked
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{uuid}/raprofile/{raProfileUuid}:
    patch:
      tags:
      - ACME Profile Management
      summary: Update RA Profile for ACME Profile
      operationId: updateRaProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: RA Profile updated
        "404":
          description: RA Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{uuid}/enable:
    patch:
      tags:
      - ACME Profile Management
      summary: Enable ACME Profile
      operationId: enableAcmeProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ACME Profile enabled
        "404":
          description: ACME Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "204":
          description: No Content
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{uuid}/disable:
    patch:
      tags:
      - ACME Profile Management
      summary: Disable ACME Profile
      operationId: disableAcmeProfile
      parameters:
      - name: uuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ACME Profile disabled
        "404":
          description: ACME Profile not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "204":
          description: No Content
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{acmeProfileUuid}/acmeAccounts/{acmeAccountUuid}/enable:
    patch:
      tags:
      - ACME Account Management
      summary: Enable ACME Account
      operationId: enableAcmeAccount
      parameters:
      - name: acmeProfileUuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      - name: acmeAccountUuid
        in: path
        description: ACME Account UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ACME Account enabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/{acmeProfileUuid}/acmeAccounts/{acmeAccountUuid}/disable:
    patch:
      tags:
      - ACME Account Management
      summary: Disable ACME Account
      operationId: disableAcmeAccount
      parameters:
      - name: acmeProfileUuid
        in: path
        description: ACME Profile UUID
        required: true
        schema:
          type: string
      - name: acmeAccountUuid
        in: path
        description: ACME Account UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: ACME Account disabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/enable:
    patch:
      tags:
      - ACME Profile Management
      summary: Enable multiple ACME Profiles
      operationId: bulkEnableAcmeProfile
      requestBody:
        description: ACME Profile UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "200":
          description: ACME Profiles enabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "204":
          description: No Content
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/disable:
    patch:
      tags:
      - ACME Profile Management
      summary: Disable multiple ACME Profile
      operationId: bulkDisableAcmeProfile
      requestBody:
        description: ACME Profile UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "200":
          description: ACME Profiles disabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "204":
          description: No Content
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeAccounts/enable:
    patch:
      tags:
      - ACME Account Management
      summary: Enable multiple ACME Accounts
      operationId: bulkEnableAcmeAccount
      requestBody:
        description: ACME Account UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: ACME Accounts enabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeAccounts/disable:
    patch:
      tags:
      - ACME Account Management
      summary: Disable multiple ACME Accounts
      operationId: bulkDisableAcmeAccount
      requestBody:
        description: ACME Account UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: ACME Accounts disabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeAccounts:
    get:
      tags:
      - ACME Account Management
      summary: List ACME Accounts
      operationId: listAcmeAccounts
      responses:
        "200":
          description: ACME Accounts list retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcmeAccountListResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/delete:
    delete:
      tags:
      - ACME Profile Management
      summary: Delete multiple ACME Profiles
      operationId: bulkDeleteAcmeProfile
      requestBody:
        description: ACME Profile UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "200":
          description: ACME Profiles deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BulkActionMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
  /v1/acmeProfiles/delete/force:
    delete:
      tags:
      - ACME Profile Management
      summary: Force delete multiple ACME Profiles
      operationId: forceDeleteACMEProfiles
      requestBody:
        description: ACME Profile UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "200":
          description: ACME Profiles forced to delete
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BulkActionMessageDto"
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
      security:
      - BearerJWTAuth: []
      - CertificateAuth: []
      - SessionAuth: []
components:
  schemas:
    AcmeProfileEditRequestDto:
      type: object
      properties:
        description:
          type: string
          description: Description of the ACME Profile
          examples:
          - Sample description
        termsOfServiceUrl:
          type: string
          description: Terms of Service URL
          examples:
          - https://sample-url.com/termsOfService
        websiteUrl:
          type: string
          description: Website URL
          examples:
          - https://sample-url.com
        dnsResolverIp:
          type: string
          default: System Default
          description: DNS Resolver IP address
          examples:
          - 8.8.8.8
        dnsResolverPort:
          type: string
          default: "53"
          description: DNS Resolver port number
          examples:
          - "53"
        raProfileUuid:
          type: string
          description: RA Profile UUID
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
        retryInterval:
          type: integer
          format: int32
          default: "30"
          description: Retry interval for the Orders
          examples:
          - "60"
        termsOfServiceChangeDisable:
          type: boolean
          default: "false"
          description: Disable new Orders due to change in Terms of Service
          examples:
          - "false"
        termsOfServiceChangeUrl:
          type: string
          description: Changes of Terms of Service URL
          examples:
          - https://sample-url.com/termsOfService/change
        validity:
          type: integer
          format: int32
          default: "36000"
          description: Order Validity
          examples:
          - "3000"
        issueCertificateAttributes:
          type: array
          description: List of Attributes to issue Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        revokeCertificateAttributes:
          type: array
          description: List of Attributes to revoke Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        requireContact:
          type: boolean
          default: "false"
          description: Require contact information for new Account
          examples:
          - "true"
        requireTermsOfService:
          type: boolean
          default: "false"
          description: Require new Account to agree on Terms of Service
          examples:
          - "false"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
      required:
      - issueCertificateAttributes
      - revokeCertificateAttributes
    AttributeCallback:
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
          uniqueItems: true
      required:
      - callbackContext
      - callbackMethod
      - mappings
    AttributeCallbackMapping:
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: 'Type of the attribute content. '
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
          uniqueItems: true
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      required:
      - targets
      - to
    AttributeConstraintType:
      type: string
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraintDto:
      type: object
      description: Base Attribute Constraint definition
      discriminator:
        propertyName: type
        mapping:
          regExp: "#/components/schemas/RegexpAttributeConstraint"
          range: "#/components/schemas/RangeAttributeConstraint"
          dateTime: "#/components/schemas/DateTimeAttributeConstraint"
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
      properties:
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        description:
          type: string
          description: Description of the constraint
      required:
      - type
    BaseAttributeContentDto:
      type: object
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
      properties:
        reference:
          type: string
          description: Content Reference
    BooleanAttributeContent:
      type: object
      description: Boolean attribute content to store true/false values
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
      required:
      - data
    CodeBlockAttributeContent:
      type: object
      description: Codeblock attribute content to store encoded snippets of programming
        language code
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
          description: CodeBlock attribute content data
      required:
      - data
    CodeBlockAttributeContentData:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
          description: Definition of programming languages used for code
          examples:
          - "JAVA, PHP, C, etc"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      required:
      - code
      - language
    CredentialAttributeContent:
      type: object
      description: Credential attribute content carrying information about credential
        to use
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
          description: Credential attribute content data
      required:
      - data
    CredentialAttributeContentData:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          examples:
          - 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          examples:
          - Name
        kind:
          type: string
          description: Credential Kind
          examples:
          - "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      required:
      - attributes
      - kind
      - name
      - uuid
    DataAttribute:
      type: object
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          examples:
          - "2"
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          examples:
          - 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          examples:
          - Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
          description: Properties of the Attributes
        constraints:
          type: array
          description: Optional constraints used for validating the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraintDto"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    DataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          examples:
          - Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          examples:
          - requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    DateAttributeContent:
      type: object
      description: Date attribute content in predefined format
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date
          description: Date attribute value in format yyyy-MM-dd
      required:
      - data
    DateTimeAttributeConstraint:
      type: object
      description: DateTime attribute constraint to specify boundaries for date value
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
          description: DateTime Range Attribute Constraint Data
      required:
      - type
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: Start of the datetime for validation
        to:
          type: string
          format: date-time
          description: End of the datetime for validation
    DateTimeAttributeContent:
      type: object
      description: DateTime attribute content in predefined format with timezone
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date-time
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
      required:
      - data
    FileAttributeContent:
      type: object
      description: File attribute content for storing encoded file content with additional
        info
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
          description: File attribute content data
      required:
      - data
    FileAttributeContentData:
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      required:
      - content
      - fileName
      - mimeType
    FloatAttributeContent:
      type: object
      description: Float attribute content for decimal numbers
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          format: float
          description: Float attribute value
      required:
      - data
    IntegerAttributeContent:
      type: object
      description: Integer attribute content for integer numbers
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          format: int32
          description: Integer attribute value
      required:
      - data
    ObjectAttributeContent:
      type: object
      description: Object attribute content for data with custom structure
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
      required:
      - data
    ProgrammingLanguageEnum:
      type: string
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      type: object
      description: Range attribute constraint to specify boundaries for integer value
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
          description: Integer Range Attribute Constraint Data
      required:
      - type
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          format: int32
          description: Start of the range for validation
        to:
          type: integer
          format: int32
          description: End of the range for validation
    RegexpAttributeConstraint:
      type: object
      description: RegExp attribute constraint to restrict string value by regular
        expression
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
      required:
      - type
    RequestAttributeDto:
      type: object
      description: Request attribute to send attribute content for object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          examples:
          - 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          examples:
          - Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          examples:
          - Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
      required:
      - content
      - contentType
      - name
      - uuid
    SecretAttributeContent:
      type: object
      description: Secret attribute content carrying secrets with defined protection
        level
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
          description: Secret attribute content data
      required:
      - data
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
    StringAttributeContent:
      type: object
      description: String attribute content
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
      required:
      - data
    TextAttributeContent:
      type: object
      description: Text attribute content used to store longer formatted strings
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
      required:
      - data
    TimeAttributeContent:
      type: object
      description: Time attribute content in predefined format
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
      required:
      - data
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          examples:
          - Error message
      required:
      - message
    AuthenticationServiceExceptionDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          description: Status code of the HTTP Request
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
      required:
      - code
      - message
      - statusCode
    AcmeProfileDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          examples:
          - 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          examples:
          - Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        description:
          type: string
          description: ACME Profile description
          examples:
          - Sample description
        termsOfServiceUrl:
          type: string
          description: Terms of Service URL
          examples:
          - https://sample-url.com/termsOfService
        websiteUrl:
          type: string
          description: Website URL
          examples:
          - https://sample-company.com
        dnsResolverIp:
          type: string
          description: DNS Resolver IP address
          examples:
          - 8.8.8.8
        dnsResolverPort:
          type: string
          description: DNS Resolver port number
          examples:
          - "53"
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile
        retryInterval:
          type: integer
          format: int32
          description: Retry interval for ACME client requests
          examples:
          - "30"
        termsOfServiceChangeDisable:
          type: boolean
          description: Disable new Orders (change in Terms of Service)
          examples:
          - "false"
        validity:
          type: integer
          format: int32
          description: Order validity
          examples:
          - "36000"
        directoryUrl:
          type: string
          description: ACME Directory URL
          examples:
          - https://some-server.com/api/v1/protocols/acme/profile1/directory
        termsOfServiceChangeUrl:
          type: string
          description: Changes of Terms of Service URL
          examples:
          - https://some-company.com/termsOfService/change
        requireContact:
          type: boolean
          description: Require Contact information for new Account
          examples:
          - "true"
        requireTermsOfService:
          type: boolean
          description: Require new Account to agree on Terms of Service
          examples:
          - "true"
        issueCertificateAttributes:
          type: array
          description: List of Attributes to issue a Certificate
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        revokeCertificateAttributes:
          type: array
          description: List of Attributes to revoke a Certificate
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      required:
      - enabled
      - name
      - uuid
    ResponseAttributeDto:
      type: object
      description: Response attribute with content for object it belongs to
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          examples:
          - 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          examples:
          - Attribute
        label:
          type: string
          description: Label of the the Attribute
          examples:
          - Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          examples:
          - Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
      required:
      - contentType
      - label
      - name
      - type
    SimplifiedRaProfileDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          examples:
          - 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          examples:
          - Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        authorityInstanceUuid:
          type: string
          description: Authority Instance UUID
      required:
      - enabled
      - name
      - uuid
    AcmeProfileRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the ACME Profile
          examples:
          - Profile Name 1
        description:
          type: string
          description: Description of the ACME Profile
          examples:
          - Sample description
        termsOfServiceUrl:
          type: string
          description: Terms of Service URL
          examples:
          - https://sample-url.com/termsOfService
        websiteUrl:
          type: string
          description: Website URL
          examples:
          - https://sample-url.com
        dnsResolverIp:
          type: string
          default: System Default
          description: DNS Resolver IP address
          examples:
          - 8.8.8.8
        dnsResolverPort:
          type: string
          default: "53"
          description: DNS Resolver port number
          examples:
          - "53"
        raProfileUuid:
          type: string
          description: RA Profile UUID
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
        retryInterval:
          type: integer
          format: int32
          default: "30"
          description: Retry interval for the Orders
          examples:
          - "60"
        validity:
          type: integer
          format: int32
          default: "36000"
          description: Order Validity
          examples:
          - "3000"
        issueCertificateAttributes:
          type: array
          description: List of Attributes to issue Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        revokeCertificateAttributes:
          type: array
          description: List of Attributes to revoke Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        requireContact:
          type: boolean
          default: "false"
          description: Require contact information for new Account
          examples:
          - "true"
        requireTermsOfService:
          type: boolean
          default: "false"
          description: Require new Account to agree on Terms of Service
          examples:
          - "false"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
      required:
      - issueCertificateAttributes
      - name
      - revokeCertificateAttributes
    UuidDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
      required:
      - uuid
    AcmeProfileListDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          examples:
          - 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          examples:
          - Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
          examples:
          - "false"
        description:
          type: string
          description: ACME Profile description
          examples:
          - Some description
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile
        directoryUrl:
          type: string
          description: URL of the ACME Directory
          examples:
          - https://some-server.com/api/v1/protocols/acme/profile1/directory
      required:
      - enabled
      - name
      - uuid
    AccountStatus:
      type: string
      enum:
      - valid
      - deactivated
      - revoked
    AcmeAccountResponseDto:
      type: object
      properties:
        accountId:
          type: string
          description: ID of the Account
          examples:
          - TtrgfYTR6F
        uuid:
          type: string
          description: UUID of the Account
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
        enabled:
          type: boolean
          description: "Enabled flag. enabled=true, disabled=false"
          examples:
          - "false"
        totalOrders:
          type: integer
          format: int32
          description: Order count for the Account
          examples:
          - "23"
        successfulOrders:
          type: integer
          format: int32
          description: Number of successful Orders
          examples:
          - "2"
        failedOrders:
          type: integer
          format: int32
          description: Number of failed Orders
          examples:
          - "239"
        pendingOrders:
          type: integer
          format: int32
          description: Number of pending Orders
          examples:
          - "24"
        validOrders:
          type: integer
          format: int32
          description: Number of valid Orders
          examples:
          - "23"
        processingOrders:
          type: integer
          format: int32
          description: Number of processing Orders
          examples:
          - "27"
        status:
          $ref: "#/components/schemas/AccountStatus"
          description: Status of the Account
          examples:
          - VALID
        contact:
          type: array
          description: Contact information
          examples:
          - "mailto: someadmin@domain.com"
          items:
            type: string
        termsOfServiceAgreed:
          type: boolean
          description: Terms of Service Agreed
          examples:
          - "true"
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile
          examples:
          - RA Profile 1
        acmeProfileName:
          type: string
          description: Name of the ACME Profile
          examples:
          - ACME Profile 1
        acmeProfileUuid:
          type: string
          description: UUID of the ACME Profile
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
      required:
      - accountId
      - contact
      - enabled
      - failedOrders
      - pendingOrders
      - processingOrders
      - status
      - successfulOrders
      - termsOfServiceAgreed
      - totalOrders
      - uuid
      - validOrders
    AcmeAccountListResponseDto:
      type: object
      properties:
        accountId:
          type: string
          description: ID of the Account
          examples:
          - HJAT6gc7i6
        uuid:
          type: string
          description: UUID of the Account
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
        enabled:
          type: boolean
          description: "Enabled flag. true = enabled, false=disabled"
          examples:
          - "false"
        totalOrders:
          type: integer
          format: int32
          description: Total number of Orders
          examples:
          - "4"
        status:
          $ref: "#/components/schemas/AccountStatus"
          description: Status of the Account
          examples:
          - VALID
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile
          examples:
          - RAProfile1
        acmeProfileName:
          type: string
          description: Name of the ACME Profile
          examples:
          - ACMEProfile1
        acmeProfileUuid:
          type: string
          description: UUID of the ACME Profile
          examples:
          - 6b55de1c-844f-11ec-a8a3-0242ac120002
      required:
      - accountId
      - enabled
      - status
      - totalOrders
      - uuid
    BulkActionMessageDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          examples:
          - 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          examples:
          - Name
        message:
          type: string
          description: Message describing the associations of the Objects which is
            preventing the bulk operation
          examples:
          - Object is associated with other items
      required:
      - message
      - name
      - uuid
  securitySchemes:
    ConnectorAPIKeyAuth:
      type: apiKey
      description: API Key in header configured for connector
      name: X-API-KEY
      in: header
    SessionAuth:
      type: apiKey
      description: Session-based authentication with session ID stored in 'czertainly-session'
        cookie
      name: czertainly-session
      in: cookie
    BasicAuth:
      type: http
      scheme: Basic
    CertificateAuth:
      type: apiKey
      description: Base64 encoded X.509 certificate passed in header
      name: X-APP-CERTIFICATE
      in: header
    CertificateTLSAuth:
      type: mutualTLS
      description: Client certificate authentication
    NoAuth:
      type: http
      description: No authentication
      scheme: none
    BearerJWTAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
