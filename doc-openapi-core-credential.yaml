openapi: 3.0.1
info:
  title: CZERTAINLY Credential API
  description: REST API for managing Credentials in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Credential Management API
  description: Credential Management API
paths:
  /v1/credentials/{uuid}/enable:
    put:
      tags:
      - Credential Management API
      summary: Enable a Credential
      operationId: enableCredential
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid request
        "204":
          description: Credential enabled
        "404":
          description: Not found
  /v1/credentials/{uuid}/disable:
    put:
      tags:
      - Credential Management API
      summary: Disable a Credential
      operationId: disableCredential
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid request
        "404":
          description: Not found
        "204":
          description: Credential disabled
  /v1/credentials/{uuid}:
    get:
      tags:
      - Credential Management API
      summary: Details of a Credentials
      operationId: getCredential
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid request
        "200":
          description: Credential details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDto'
        "404":
          description: Not found
    post:
      tags:
      - Credential Management API
      summary: Update a Credential
      operationId: updateCredential
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequestDto'
        required: true
      responses:
        "400":
          description: Invalid request
        "422":
          description: Unprocessable Entity
        "404":
          description: Not found
        "200":
          description: Credential updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDto'
    delete:
      tags:
      - Credential Management API
      summary: Remove a Credential
      operationId: removeCredential
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid request
        "422":
          description: Unprocessable Entity
        "404":
          description: Not found
        "204":
          description: Credential deleted
  /v1/credentials:
    get:
      tags:
      - Credential Management API
      summary: List of All Credentials
      operationId: listCredentials
      responses:
        "400":
          description: Invalid request
        "200":
          description: List of all Credentials
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialDto'
        "404":
          description: Not found
    post:
      tags:
      - Credential Management API
      summary: Add a new Credential
      operationId: createCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequestDto'
        required: true
      responses:
        "400":
          description: Invalid request
        "201":
          description: New Credential added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "422":
          description: Unprocessable Entity
        "404":
          description: Not found
    delete:
      tags:
      - Credential Management API
      summary: Delete multiple Credentials
      operationId: bulkRemoveCredential
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Credentials deleted
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ForceDeleteMessageDto'
        "400":
          description: Invalid request
        "422":
          description: Unprocessible Entity
        "404":
          description: Not found
  /v1/credentials/force:
    delete:
      tags:
      - Credential Management API
      summary: Force delete multiple Credentials
      operationId: bulkForceRemoveCredential
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Invalid request
        "422":
          description: Unprocessible Entity
        "204":
          description: Credentials forced to delete
        "404":
          description: Not found
components:
  schemas:
    CredentialRequestDto:
      required:
      - attributes
      - connectorUuid
      - kind
      - name
      type: object
      properties:
        name:
          type: string
          description: Credential name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        connectorUuid:
          type: string
          description: UUID of Credential provider Connector
    RequestAttributeDto:
      required:
      - name
      - value
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        value:
          type: object
          description: Value of the Attribute
      description: List of Credential Attributes
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
        pathVariables:
          type: object
          additionalProperties:
            type: object
            description: Map of path variables supported by the callback method
          description: Map of path variables supported by the callback method
        queryParameters:
          type: object
          additionalProperties:
            type: object
            description: Map of the query parameters supported by the callback method
          description: Map of the query parameters supported by the callback method
        requestBody:
          type: object
          additionalProperties:
            type: object
            description: Request body for the callback method
          description: Request body for the callback method
      description: Optional definition of callback for helper methods
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          type: string
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            type: string
            description: Set of targets for propagating value.
            enum:
            - PATH_VARIABLE
            - REQUEST_PARAMETER
            - BODY
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeDefinition:
      required:
      - editable
      - label
      - multiValue
      - name
      - readOnly
      - required
      - type
      - uuid
      - visible
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          type: string
          description: Type of the Attribute
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        required:
          type: boolean
          description: Boolean determining if the Attribute is required
          default: false
        readOnly:
          type: boolean
          description: Boolean determining if the Attribute is read only
          default: false
        editable:
          type: boolean
          description: Boolean determining if the Attribute is editable
          default: true
        visible:
          type: boolean
          description: Boolean determining if the Attribute is visible and can be
            displayed
          default: true
        multiValue:
          type: boolean
          description: Boolean determining if the Attribute has value composed from
            multiple items
          default: false
        description:
          type: string
          description: "Optional description of the Attribute, should contain help\
            \ for setting proper value"
        validationRegex:
          type: string
          description: Optional regular expression used for validating the Attribute
            value
        dependsOn:
          type: array
          description: Optional list of other Attribute names and values on which
            it depends on
          items:
            $ref: '#/components/schemas/AttributeDependency'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
        value:
          type: object
          description: Value of the Attribute
      description: List of Credential Attributes
    AttributeDependency:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of depending attribute
        value:
          type: object
          description: "Value of depending attribute, which should be matched"
      description: Optional list of other Attribute names and values on which it depends
        on
    CredentialDto:
      required:
      - attributes
      - connectorName
      - connectorUuid
      - enabled
      - kind
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        connectorUuid:
          type: string
          description: UUID of Credential provider Connector
        connectorName:
          type: string
          description: Name of Credential provider Connector
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
    ForceDeleteMessageDto:
      required:
      - message
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        message:
          type: string
          description: Message describing the associations of the Connector which
            is preventing the delete operation
