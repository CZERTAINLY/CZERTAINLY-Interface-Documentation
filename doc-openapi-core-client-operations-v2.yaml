openapi: 3.0.1
info:
  title: CZERTAINLY Client Operations v2 API
  description: REST API for v2 Client Operations
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: v2 Client Operations API
  description: v2 Client Operations API
paths:
  /v2/operations/{raProfileUuid}/{certificateUuid}/revoke:
    post:
      tags:
      - v2 Client Operations API
      summary: Revoke Certificate
      operationId: revokeCertificate
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertificateRevocationDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Certificate revoked
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v2/operations/{raProfileUuid}/{certificateUuid}/renew:
    post:
      tags:
      - v2 Client Operations API
      summary: Renew Certificate
      operationId: renewCertificate
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertificateRenewRequestDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Certificate renewed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertificateDataResponseDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
  /v2/operations/{raProfileUuid}/revoke/attributes/validate:
    post:
      tags:
      - v2 Client Operations API
      summary: Validate revocation Attributes
      operationId: validateRevokeCertificateAttributes
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v2/operations/{raProfileUuid}/issue/attributes/validate:
    post:
      tags:
      - v2 Client Operations API
      summary: Validate issue Certificate Attributes
      operationId: validateIssueCertificateAttributes
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
  /v2/operations/{raProfileUuid}/issue:
    post:
      tags:
      - v2 Client Operations API
      summary: Issue Certificate
      operationId: issueCertificate
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertificateSignRequestDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertificateDataResponseDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
  /v2/operations/{raProfileUuid}/revoke/attributes:
    get:
      tags:
      - v2 Client Operations API
      summary: Get revocation Attributes
      operationId: listRevokeCertificateAttributes
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: Attributes obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v2/operations/{raProfileUuid}/issue/attributes:
    get:
      tags:
      - v2 Client Operations API
      summary: Get issue Certificate Attributes
      operationId: listIssueCertificateAttributes
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Attributes list obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
components:
  schemas:
    ClientCertificateRevocationDto:
      required:
      - attributes
      - reason
      type: object
      properties:
        reason:
          type: string
          description: Reason for revocation
          enum:
          - UNSPECIFIED
          - KEY_COMPROMISE
          - CA_COMPROMISE
          - AFFILIATION_CHANGED
          - SUPERSEDED
          - CESSATION_OF_OPERATION
          - CERTIFICATE_HOLD
          - REMOVE_FROM_CRL
          - PRIVILEGES_WITHDRAWN
          - AA_COMPROMISE
        attributes:
          type: array
          description: List of Attributes to revoke Certificate
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    RequestAttributeDto:
      required:
      - name
      - value
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        value:
          type: object
          description: Value of the Attribute
      description: List of Attributes to revoke Certificate
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    ClientCertificateRenewRequestDto:
      required:
      - pkcs10
      type: object
      properties:
        pkcs10:
          type: string
          description: Certificate sign request (PKCS#10) encoded as Base64 string
    ClientCertificateDataResponseDto:
      required:
      - certificateData
      - uuid
      type: object
      properties:
        certificateData:
          type: string
          description: Base64 encoded Certificate content
        uuid:
          type: string
          description: UUID of Certificate
    ClientCertificateSignRequestDto:
      required:
      - attributes
      - pkcs10
      type: object
      properties:
        pkcs10:
          type: string
          description: Certificate sign request (PKCS#10) encoded as Base64 string
        attributes:
          type: array
          description: List of Attributes to issue Certificate
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
      description: Optional definition of callback for helper methods
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          type: string
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
          enum:
          - STRING
          - NUMBER
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            type: string
            description: Set of targets for propagating value.
            enum:
            - pathVariable
            - requestParameter
            - body
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeDefinition:
      required:
      - editable
      - label
      - multiValue
      - name
      - readOnly
      - required
      - type
      - uuid
      - visible
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          type: string
          description: Type of the Attribute
          enum:
          - STRING
          - NUMBER
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        required:
          type: boolean
          description: Boolean determining if the Attribute is required
          default: false
        readOnly:
          type: boolean
          description: Boolean determining if the Attribute is read only
          default: false
        editable:
          type: boolean
          description: Boolean determining if the Attribute is editable
          default: true
        visible:
          type: boolean
          description: Boolean determining if the Attribute is visible and can be
            displayed
          default: true
        multiValue:
          type: boolean
          description: Boolean determining if the Attribute has value composed from
            multiple items
          default: false
        description:
          type: string
          description: "Optional description of the Attribute, should contain help\
            \ for setting proper value"
        validationRegex:
          type: string
          description: Optional regular expression used for validating the Attribute
            value
        dependsOn:
          type: array
          description: Optional list of other Attribute names and values on which
            it depends on
          items:
            $ref: '#/components/schemas/AttributeDependency'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
        value:
          type: object
          description: Value of the Attribute
    AttributeDependency:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of depending attribute
        value:
          type: object
          description: "Value of depending attribute, which should be matched"
      description: Optional list of other Attribute names and values on which it depends
        on
