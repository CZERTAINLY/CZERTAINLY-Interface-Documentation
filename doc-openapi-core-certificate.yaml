openapi: 3.0.1
info:
  title: CZERTAINLY Certificate API
  description: REST API for managing Certificates in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Certificate Group API
  description: Certificate Group API
- name: Certificate Inventory API
  description: Certificate Inventory API
- name: Certificate Entity API
  description: Certificate Entity API
paths:
  /v1/certificate/{uuid}/ra-profile:
    put:
      tags:
      - Certificate Inventory API
      summary: Update RA Profile for a Certificate
      operationId: updateRaProfile
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUpdateRAProfileDto'
        required: true
      responses:
        "204":
          description: RA Profile updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/{uuid}/owner:
    put:
      tags:
      - Certificate Inventory API
      summary: Update Owner for a Certificate
      operationId: updateOwner
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateOwnerRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "204":
          description: Owner updated
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/{uuid}/group:
    put:
      tags:
      - Certificate Inventory API
      summary: Update Group for a Certificate
      operationId: updateCertificateGroup
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUpdateGroupDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Group updated
  /v1/certificate/{uuid}/entity:
    put:
      tags:
      - Certificate Inventory API
      summary: Update Entity for a Certificate
      operationId: updateEntity
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateUpdateEntityDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Entity updated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/validate:
    put:
      tags:
      - Certificate Inventory API
      summary: Validate Certificates of Status Unknown
      operationId: validateAllCertificate
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Certificate Validation Initiated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/ra-profile:
    put:
      tags:
      - Certificate Inventory API
      summary: Update RA Profile for multiple Certificates
      operationId: bulkUpdateRaProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRAProfileUpdateDto'
        required: true
      responses:
        "204":
          description: RA Profile updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/owner:
    put:
      tags:
      - Certificate Inventory API
      summary: Update Owner for multiple Certificates
      operationId: bulkUpdateOwner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateOwnerBulkUpdateDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "204":
          description: Owner updated
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/group:
    put:
      tags:
      - Certificate Inventory API
      summary: Update group for multiple Certificates
      operationId: bulkUpdateCertificateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleGroupUpdateDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Group updated
  /v1/certificate/entity:
    put:
      tags:
      - Certificate Inventory API
      summary: Update Entity for multiple Certificates
      operationId: bulkUpdateEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleEntityUpdateDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Entity updated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/groups/{uuid}:
    get:
      tags:
      - Certificate Group API
      summary: Group details
      operationId: getGroup
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Group details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Certificate Group API
      summary: Update Group
      operationId: updateGroup
      parameters:
      - name: uuid
        in: path
        description: Group UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Certificate Group API
      summary: Remove Group
      operationId: removeGroup
      parameters:
      - name: uuid
        in: path
        description: Group UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Group removed
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/groups:
    get:
      tags:
      - Certificate Group API
      summary: List Groups
      operationId: listGroups
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: list of available Group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Certificate Group API
      summary: Create Group
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "201":
          description: Group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Certificate Group API
      summary: Remove multiple Groups
      operationId: bulkRemoveGroup
      requestBody:
        description: Group UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: Groups removed
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/entities/{uuid}:
    get:
      tags:
      - Certificate Entity API
      summary: Entity details
      operationId: getEntity
      parameters:
      - name: uuid
        in: path
        description: Entity UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: Entity details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Certificate Entity API
      summary: Update Entity
      operationId: updateEntity_1
      parameters:
      - name: uuid
        in: path
        description: Entity UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Entity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Certificate Entity API
      summary: Remove Entity
      operationId: removeEntity
      parameters:
      - name: uuid
        in: path
        description: Entity UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Entity removed
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/entities:
    get:
      tags:
      - Certificate Entity API
      summary: List Entities
      operationId: listEntities
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: list of available Entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Certificate Entity API
      summary: Create Entity
      operationId: createEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: New Entity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Certificate Entity API
      summary: Remove multiple Entity
      operationId: bulkRemoveEntity
      requestBody:
        description: Entity UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "204":
          description: Entities removed
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/upload:
    post:
      tags:
      - Certificate Inventory API
      summary: Upload a new Certificate
      operationId: upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCertificateRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Certificate uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
  /v1/certificate/delete:
    post:
      tags:
      - Certificate Inventory API
      summary: Delete multiple certificates
      operationId: bulkRemoveCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCertificateDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Certificates deleted
  /v1/certificate/{uuid}/validate:
    get:
      tags:
      - Certificate Inventory API
      summary: Initiate Certificate validation
      operationId: check
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: Certificate validation initiated
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate/{uuid}:
    get:
      tags:
      - Certificate Inventory API
      summary: Get Certificate Details
      operationId: getCertificate
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Certificate detail retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Certificate Inventory API
      summary: Remove a certificate
      operationId: removeCertificate
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Certificate deleted
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/certificate:
    get:
      tags:
      - Certificate Inventory API
      summary: List Certificates
      operationId: listCertificate
      parameters:
      - name: start
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: end
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: List of all the certificates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
components:
  schemas:
    CertificateUpdateRAProfileDto:
      required:
      - raProfileUuid
      type: object
      properties:
        raProfileUuid:
          type: string
          description: RA Profile UUID
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    CertificateOwnerRequestDto:
      required:
      - owner
      type: object
      properties:
        owner:
          type: string
          description: Owner of the certificate
    CertificateUpdateGroupDto:
      required:
      - groupUuid
      type: object
      properties:
        groupUuid:
          type: string
          description: Group UUID
    CertificateUpdateEntityDto:
      required:
      - entityUuid
      type: object
      properties:
        entityUuid:
          type: string
          description: Entity UUID
    MultipleRAProfileUpdateDto:
      required:
      - certificateUuids
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the RA Profile
        certificateUuids:
          type: array
          description: List of UUIDs of the Certificates
          items:
            type: string
            description: List of UUIDs of the Certificates
    CertificateOwnerBulkUpdateDto:
      required:
      - certificateUuids
      - owner
      type: object
      properties:
        owner:
          type: string
          description: Owner of the Certificates
        certificateUuids:
          type: array
          description: List of Certificate UUIDs
          items:
            type: string
            description: List of Certificate UUIDs
    MultipleGroupUpdateDto:
      required:
      - certificateUuids
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Group
        certificateUuids:
          type: array
          description: List of UUIDs of the Certificates
          items:
            type: string
            description: List of UUIDs of the Certificates
    MultipleEntityUpdateDto:
      required:
      - certificateUuids
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of Entity
        certificateUuids:
          type: array
          description: List of UUIDs of the Certificates
          items:
            type: string
            description: List of UUIDs of the Certificates
    GroupRequestDto:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Certificate Group
        description:
          type: string
          description: Description of the Certificate Group
    GroupDto:
      required:
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        description:
          type: string
          description: Description of the Certificate Group
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
    EntityRequestDto:
      required:
      - entityType
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Entity
        description:
          type: string
          description: Description of the Entity
        entityType:
          type: string
          description: Type of the Entity
          enum:
          - server
          - router
          - HSM
          - switch
          - loadBalancer
          - firewall
          - MDM
          - cloud
    EntityDto:
      required:
      - entityType
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        description:
          type: string
          description: Description of the Entity
        entityType:
          type: string
          description: Type of the Entity
          enum:
          - server
          - router
          - HSM
          - switch
          - loadBalancer
          - firewall
          - MDM
          - cloud
    UploadCertificateRequestDto:
      required:
      - certificate
      type: object
      properties:
        certificate:
          type: string
          description: Base64 Content of the Certificate
    RemoveCertificateDto:
      required:
      - uuids
      type: object
      properties:
        uuids:
          type: array
          description: UUIDs of the Certificate
          items:
            type: string
            description: UUIDs of the Certificate
    CertificateDto:
      required:
      - basicConstraints
      - certificateContent
      - commonName
      - fingerprint
      - issuerCommonName
      - issuerDn
      - keySize
      - keyUsage
      - notAfter
      - notBefore
      - publicKeyAlgorithm
      - serialNumber
      - signatureAlgorithm
      - status
      - subjectDn
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        certificateContent:
          type: string
          description: Base64 encoded Certificate content
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          description: Certificate validity start date
          format: date-time
        notAfter:
          type: string
          description: Certificate expiration date
          format: date-time
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          description: Certificate key size
          format: int32
        extendedKeyUsage:
          type: array
          description: Extended key usages
          items:
            type: string
            description: Extended key usages
        keyUsage:
          type: array
          description: Key usages
          items:
            type: string
            description: Key usages
        basicConstraints:
          type: string
          description: Basic Constraints
        meta:
          type: object
          additionalProperties:
            type: object
            description: Certificate meta data
          description: Certificate meta data
        status:
          type: string
          description: Status of the Certificate
          enum:
          - valid
          - revoked
          - expired
          - unknown
          - expiring
          - new
          - invalid
        raProfile:
          $ref: '#/components/schemas/SimplifiedRaProfileDto'
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
            description: Subject alternative names
          description: Subject alternative names
        entity:
          $ref: '#/components/schemas/EntityDto'
        group:
          $ref: '#/components/schemas/GroupDto'
        owner:
          type: string
          description: Certificate Owner
        certificateType:
          type: string
          description: Certificate type
          enum:
          - X509
          - SSH
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        certificateValidationResult:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CertificateValidationDto'
          description: Certificate validation result
    CertificateValidationDto:
      type: object
      properties:
        status:
          type: string
          enum:
          - success
          - failed
          - warning
          - revoked
          - not_checked
          - invalid
          - expiring
          - expired
        message:
          type: string
      description: Certificate validation result
    SimplifiedRaProfileDto:
      required:
      - enabled
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
      description: RA Profile associated to the Certificate
