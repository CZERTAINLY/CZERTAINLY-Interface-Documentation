openapi: 3.0.1
info:
  title: CZERTAINLY Authority API
  description: REST API for managing Authorities in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Authority Management API
  description: Authority Management API
paths:
  /v1/authorities/{uuid}/raProfile/attributes/validate:
    post:
      tags:
      - Authority Management API
      summary: Validate RA Profile Attributes
      operationId: validateRAProfileAttributes
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attribute information validated
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/{uuid}:
    get:
      tags:
      - Authority Management API
      summary: Details of an Authority instance
      operationId: getAuthorityInstance
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Authority instance details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorityInstanceDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Authority Management API
      summary: Update Authority instance
      operationId: updateAuthorityInstance
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorityInstanceUpdateRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Authority instance details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorityInstanceDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Authority Management API
      summary: Remove Authority instance
      operationId: removeAuthorityInstance
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Authority instance deleted
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities:
    get:
      tags:
      - Authority Management API
      summary: List of available Authority instances
      operationId: listAuthorityInstances
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: List of Authority instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorityInstanceDto'
    post:
      tags:
      - Authority Management API
      summary: Add Authority instance
      operationId: createAuthorityInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorityInstanceRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "201":
          description: New Authority instance added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Authority Management API
      summary: Delete multiple Authority instances
      operationId: bulkRemoveAuthorityInstance
      requestBody:
        description: Authority Instance UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "500":
          description: Internal Server Error
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Authority instances deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ForceDeleteMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/{uuid}/raProfile/attributes:
    get:
      tags:
      - Authority Management API
      summary: List RA Profile Attributes
      operationId: listRAProfileAttributes
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attribute information retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/{uuid}/endentityprofiles/{endEntityProfileId}/certificateprofiles:
    get:
      tags:
      - Authority Management API
      operationId: listCertificateProfiles
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      - name: endEntityProfileId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/{uuid}/endentityprofiles/{endEntityProfileId}/cas:
    get:
      tags:
      - Authority Management API
      operationId: listCAsInProfile
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      - name: endEntityProfileId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/{uuid}/endentityprofiles:
    get:
      tags:
      - Authority Management API
      operationId: listEntityProfiles
      parameters:
      - name: uuid
        in: path
        description: Authority instance UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/authorities/force:
    delete:
      tags:
      - Authority Management API
      summary: Force delete multiple Authority instances
      operationId: bulkForceRemoveAuthorityInstance
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Authority instances forced to delete
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
components:
  schemas:
    RequestAttributeDto:
      required:
      - name
      - value
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        value:
          type: object
          description: Value of the Attribute
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    AuthorityInstanceUpdateRequestDto:
      required:
      - attributes
      type: object
      properties:
        attributes:
          type: array
          description: List of Authority instance Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
        pathVariables:
          type: object
          additionalProperties:
            type: object
            description: Map of path variables supported by the callback method
          description: Map of path variables supported by the callback method
        queryParameters:
          type: object
          additionalProperties:
            type: object
            description: Map of the query parameters supported by the callback method
          description: Map of the query parameters supported by the callback method
        requestBody:
          type: object
          additionalProperties:
            type: object
            description: Request body for the callback method
          description: Request body for the callback method
      description: Optional definition of callback for helper methods
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          type: string
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            type: string
            description: Set of targets for propagating value.
            enum:
            - pathVariable
            - requestParameter
            - body
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeDefinition:
      required:
      - editable
      - label
      - multiValue
      - name
      - readOnly
      - required
      - type
      - uuid
      - visible
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          type: string
          description: Type of the Attribute
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        required:
          type: boolean
          description: Boolean determining if the Attribute is required
          default: false
        readOnly:
          type: boolean
          description: Boolean determining if the Attribute is read only
          default: false
        editable:
          type: boolean
          description: Boolean determining if the Attribute is editable
          default: true
        visible:
          type: boolean
          description: Boolean determining if the Attribute is visible and can be
            displayed
          default: true
        multiValue:
          type: boolean
          description: Boolean determining if the Attribute has value composed from
            multiple items
          default: false
        description:
          type: string
          description: "Optional description of the Attribute, should contain help\
            \ for setting proper value"
        validationRegex:
          type: string
          description: Optional regular expression used for validating the Attribute
            value
        dependsOn:
          type: array
          description: Optional list of other Attribute names and values on which
            it depends on
          items:
            $ref: '#/components/schemas/AttributeDependency'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
        value:
          type: object
          description: Value of the Attribute
      description: List of Authority instance Attributes
    AttributeDependency:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of depending attribute
        value:
          type: object
          description: "Value of depending attribute, which should be matched"
      description: Optional list of other Attribute names and values on which it depends
        on
    AuthorityInstanceDto:
      required:
      - attributes
      - connectorName
      - connectorUuid
      - kind
      - name
      - status
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        attributes:
          type: array
          description: List of Authority instance Attributes
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        status:
          type: string
          description: Status of Authority instance
        connectorUuid:
          type: string
          description: UUID of Authority provider
        connectorName:
          type: string
          description: Name of Authority provider
        kind:
          type: string
          description: Authority Instance Kind
          example: "LegacyEjbca, ADCS, etc."
    AuthorityInstanceRequestDto:
      required:
      - attributes
      - connectorUuid
      - kind
      - name
      type: object
      properties:
        name:
          type: string
          description: Authority instance name
        attributes:
          type: array
          description: List of Authority instance Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        connectorUuid:
          type: string
          description: UUID of Authority provider
        kind:
          type: string
          description: Authority instance Kind
          example: "LegacyEjbca, ADCS, etc"
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
    ForceDeleteMessageDto:
      required:
      - message
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        message:
          type: string
          description: Message describing the associations of the Connector which
            is preventing the delete operation
