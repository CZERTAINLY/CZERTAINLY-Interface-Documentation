openapi: 3.0.1
info:
  title: CZERTAINLY RA Profile API
  description: REST API for managing RA Profiles in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: RA Profile Management API
  description: RA Profile Management API
paths:
  /v1/raprofiles/{uuid}/enable:
    put:
      tags:
      - RA Profile Management API
      summary: Enable RA Profiles
      operationId: enableRaProfile
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
        "204":
          description: RA Profile enabled
        "400":
          description: Invalid request
  /v1/raprofiles/{uuid}/disable:
    put:
      tags:
      - RA Profile Management API
      summary: Disable RA Profiles
      operationId: disableRaProfile
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
        "204":
          description: RA Profile disabled
        "400":
          description: Invalid request
  /v1/raprofiles/enable:
    put:
      tags:
      - RA Profile Management API
      summary: Enable multiple RA Profiles
      operationId: bulkEnableRaProfile
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "204":
          description: RA Profiles enabled
        "404":
          description: Not found
        "400":
          description: Invalid request
  /v1/raprofiles/disable:
    put:
      tags:
      - RA Profile Management API
      summary: Disable multiple RA Profiles
      operationId: bulkDisableRaProfile
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "404":
          description: Not found
        "204":
          description: RA Profiles disabled
        "400":
          description: Invalid request
  /v1/raprofiles/{uuid}:
    get:
      tags:
      - RA Profile Management API
      summary: Details of RA Profile
      operationId: getRaProfile
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
        "200":
          description: RA Profile details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaProfileDto'
        "400":
          description: Invalid request
    post:
      tags:
      - RA Profile Management API
      summary: Edit RA Profile
      operationId: editRaProfile
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditRaProfileRequestDto'
        required: true
      responses:
        "204":
          description: RA Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaProfileDto'
        "404":
          description: Not found
        "422":
          description: Unprocessible Entity
        "400":
          description: Invalid request
    delete:
      tags:
      - RA Profile Management API
      summary: Delete RA Profile
      operationId: removeRaProfile
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
        "204":
          description: RA Profile deleted
        "400":
          description: Invalid request
  /v1/raprofiles:
    get:
      tags:
      - RA Profile Management API
      summary: List of available RA Profiles by Status
      operationId: listRaProfiles_1
      parameters:
      - name: isEnabled
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "404":
          description: Not found
        "200":
          description: RA Profiles retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RaProfileDto'
        "400":
          description: Invalid request
    post:
      tags:
      - RA Profile Management API
      summary: Add RA Profile
      operationId: addRaProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRaProfileRequestDto'
        required: true
      responses:
        "404":
          description: Not found
        "201":
          description: RA Profile added
          content:
            application/json:
              schema:
                type: object
        "422":
          description: Unprocessible Entity
        "400":
          description: Invalid request
    delete:
      tags:
      - RA Profile Management API
      summary: Delete multiple Ra Profiles
      operationId: bulkRemoveRaProfile
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "404":
          description: Not found
        "204":
          description: RA Profiles deleted
        "422":
          description: Unprocessible Entity
        "400":
          description: Invalid request
  /v1/raprofiles/{uuid}/listclients:
    get:
      tags:
      - RA Profile Management API
      summary: List authorized Clients of RA Profile
      operationId: listClients
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not found
        "200":
          description: List of clients of RA Profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
        "400":
          description: Invalid request
components:
  schemas:
    EditRaProfileRequestDto:
      required:
      - attributes
      - authorityInstanceUuid
      type: object
      properties:
        description:
          type: string
          description: Description of RA Profile
        authorityInstanceUuid:
          type: string
          description: Authority instance UUID
        attributes:
          type: array
          description: List of Attributes for RA Profile
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
    RequestAttributeDto:
      required:
      - name
      - value
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        value:
          type: object
          description: Value of the Attribute
      description: List of Attributes for RA Profile
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
        pathVariables:
          type: object
          additionalProperties:
            type: object
            description: Map of path variables supported by the callback method
          description: Map of path variables supported by the callback method
        queryParameters:
          type: object
          additionalProperties:
            type: object
            description: Map of the query parameters supported by the callback method
          description: Map of the query parameters supported by the callback method
        requestBody:
          type: object
          additionalProperties:
            type: object
            description: Request body for the callback method
          description: Request body for the callback method
      description: Optional definition of callback for helper methods
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          type: string
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            type: string
            description: Set of targets for propagating value.
            enum:
            - PATH_VARIABLE
            - REQUEST_PARAMETER
            - BODY
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeDefinition:
      required:
      - editable
      - label
      - multiValue
      - name
      - readOnly
      - required
      - type
      - uuid
      - visible
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          type: string
          description: Type of the Attribute
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        required:
          type: boolean
          description: Boolean determining if the Attribute is required
          default: false
        readOnly:
          type: boolean
          description: Boolean determining if the Attribute is read only
          default: false
        editable:
          type: boolean
          description: Boolean determining if the Attribute is editable
          default: true
        visible:
          type: boolean
          description: Boolean determining if the Attribute is visible and can be
            displayed
          default: true
        multiValue:
          type: boolean
          description: Boolean determining if the Attribute has value composed from
            multiple items
          default: false
        description:
          type: string
          description: "Optional description of the Attribute, should contain help\
            \ for setting proper value"
        validationRegex:
          type: string
          description: Optional regular expression used for validating the Attribute
            value
        dependsOn:
          type: array
          description: Optional list of other Attribute names and values on which
            it depends on
          items:
            $ref: '#/components/schemas/AttributeDependency'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
        value:
          type: object
          description: Value of the Attribute
      description: List of RA Profiles attributes
    AttributeDependency:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of depending attribute
        value:
          type: object
          description: "Value of depending attribute, which should be matched"
      description: Optional list of other Attribute names and values on which it depends
        on
    RaProfileDto:
      required:
      - attributes
      - authorityInstanceName
      - authorityInstanceUuid
      - enabled
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        description:
          type: string
          description: Description of RA Profile
        authorityInstanceUuid:
          type: string
          description: UUID of Authority provider
        authorityInstanceName:
          type: string
          description: Name of Authority instance
        attributes:
          type: array
          description: List of RA Profiles attributes
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
    AddRaProfileRequestDto:
      required:
      - attributes
      - authorityInstanceUuid
      - name
      type: object
      properties:
        authorityInstanceUuid:
          type: string
          description: UUID of the Authority instance
        name:
          type: string
          description: RA Profile name
        description:
          type: string
          description: RA Profile description
        attributes:
          type: array
          description: List of Attributes to create RA Profile
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
    CertificateDto:
      required:
      - basicConstraints
      - certificateContent
      - commonName
      - fingerprint
      - issuerCommonName
      - issuerDn
      - keySize
      - keyUsage
      - notAfter
      - notBefore
      - publicKeyAlgorithm
      - serialNumber
      - signatureAlgorithm
      - status
      - subjectDn
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        certificateContent:
          type: string
          description: Base64 encoded Certificate content
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          description: Certificate validity start date
          format: date-time
        notAfter:
          type: string
          description: Certificate expiration date
          format: date-time
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          description: Certificate key size
          format: int32
        extendedKeyUsage:
          type: array
          description: Extended key usages
          items:
            type: string
            description: Extended key usages
        keyUsage:
          type: array
          description: Key usages
          items:
            type: string
            description: Key usages
        basicConstraints:
          type: string
          description: Basic Constraints
        meta:
          type: object
          additionalProperties:
            type: object
            description: Certificate meta data
          description: Certificate meta data
        status:
          type: string
          description: Status of the Certificate
          enum:
          - VALID
          - REVOKED
          - EXPIRED
          - UNKNOWN
          - EXPIRING
          - NEW
          - INVALID
        raProfile:
          $ref: '#/components/schemas/RaProfileDto'
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
            description: Subject alternative names
          description: Subject alternative names
        entity:
          $ref: '#/components/schemas/CertificateEntityDto'
        group:
          $ref: '#/components/schemas/CertificateGroupDto'
        owner:
          type: string
          description: Certificate Owner
        certificateType:
          type: string
          description: Certificate type
          enum:
          - X509
          - SSH
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        certificateValidationResult:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CertificateValidationDto'
          description: Certificate validation result
      description: Client Certificate Information
    CertificateEntityDto:
      required:
      - entityType
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        description:
          type: string
          description: Description of the Entity
        entityType:
          type: string
          description: Type of the Entity
          enum:
          - SERVER
          - ROUTER
          - HSM
          - SWITCH
          - LOAD_BALANCER
          - FIREWALL
          - MDM
          - CLOUD
      description: Entity associated to the Certificate
    CertificateGroupDto:
      required:
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        description:
          type: string
          description: Description of the Certificate Group
      description: Group associated to the Certificate
    CertificateValidationDto:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILED
          - WARNING
          - REVOKED
          - NOT_CHECKED
          - INVALID
          - EXPIRING
          - EXPIRED
        message:
          type: string
      description: Certificate validation result
    ClientDto:
      required:
      - certificate
      - description
      - enabled
      - id
      - name
      - serialNumber
      - uuid
      type: object
      properties:
        id:
          type: integer
          description: Id of the client
          format: int64
        uuid:
          type: string
          description: UUID of the client
        serialNumber:
          type: string
          description: Client serial Number
        name:
          type: string
          description: Name of the client
        certificate:
          $ref: '#/components/schemas/CertificateDto'
        description:
          type: string
          description: Client description
        enabled:
          type: boolean
          description: Status of the client / Is Client enabled?
