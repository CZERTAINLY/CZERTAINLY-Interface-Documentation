openapi: 3.0.1
info:
  title: CZERTAINLY Connector API
  description: REST API for managing Connectors in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Connector Management API
  description: Connector Management API
- name: Connector Authentication API
  description: Connector Authentication API
- name: Connector Registration API
  description: Connector Registration API
paths:
  /v1/connectors/{uuid}/reconnect:
    put:
      tags:
      - Connector Management API
      summary: Reconnect to a Connector
      operationId: reconnect
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "500":
          description: Internal Server Error
        "200":
          description: Reconnect to a Connector
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}:
    get:
      tags:
      - Connector Management API
      summary: Get details of a Connector
      operationId: getConnector
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Connector details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    put:
      tags:
      - Connector Management API
      summary: Approve a Connector
      operationId: approve
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Connector Approved
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Connector Management API
      summary: Update a Connector
      operationId: updateConnector
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorUpdateRequestDto'
        required: true
      responses:
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Connector updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Connector Management API
      summary: Delete a Connector
      operationId: removeConnector
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Connector deleted
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/reconnect:
    put:
      tags:
      - Connector Management API
      summary: Reconnect multiple Connectors
      operationId: bulkReconnect
      requestBody:
        description: Connector UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Reconnect multiple Connectors initiated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/connect:
    put:
      tags:
      - Connector Management API
      summary: Connect to a Connector
      operationId: connect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectRequestDto'
        required: true
      responses:
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Connector connected
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/approve:
    put:
      tags:
      - Connector Management API
      summary: Approve multiple Connector
      operationId: bulkApprove
      requestBody:
        description: Connector UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Approve multiple Connectors
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}/{functionGroup}/{kind}/attributes/validate:
    post:
      tags:
      - Connector Management API
      summary: Validate Attributes
      operationId: validateAttributes
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      - name: functionGroup
        in: path
        description: Function Group name
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: Kind
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "200":
          description: Attributes Validated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}/callback:
    post:
      tags:
      - Connector Management API
      summary: Callback API
      operationId: callback
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeCallback'
        required: true
      responses:
        "200":
          description: Callback executed
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/jwt/validate:
    post:
      tags:
      - Connector Authentication API
      summary: Validate JWT auth Attributes
      operationId: validateJWTAuthAttributes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/certificate/validate:
    post:
      tags:
      - Connector Authentication API
      summary: Validate certificate auth Attributes
      operationId: validateCertificateAttributes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/basic/validate:
    post:
      tags:
      - Connector Authentication API
      summary: Validate basic auth Attributes
      operationId: validateBasicAuthAttributes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/apiKey/validate:
    post:
      tags:
      - Connector Authentication API
      summary: Validate API Key Attributes
      operationId: validateApiKeyAuthAttributes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "200":
          description: Attributes validated
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors:
    get:
      tags:
      - Connector Management API
      summary: List of all Connectors
      operationId: listConnectorsByFunctionGroup_1_1
      parameters:
      - name: functionGroup
        in: query
        required: true
        schema:
          type: string
          enum:
          - credentialProvider
          - legacyAuthorityProvider
          - authorityProvider
          - discoveryProvider
      - name: kind
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: List Connectors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Connector Management API
      summary: Create a new Connector
      operationId: createConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequestDto'
        required: true
      responses:
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "200":
          description: New Connector created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Connector Management API
      summary: Delete multiple Connectors
      operationId: bulkRemoveConnector
      requestBody:
        description: Connector UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Connectors deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ForceDeleteMessageDto'
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connector/register:
    post:
      tags:
      - Connector Registration API
      summary: Register a Connector
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequestDto'
        required: true
      responses:
        "200":
          description: Connector registration initiated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}/{functionGroup}/{kind}/attributes:
    get:
      tags:
      - Connector Management API
      summary: Get Attributes from a Connector
      operationId: getAttributes
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      - name: functionGroup
        in: path
        description: Function Group name
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: Kind
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attributes received
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}/health:
    get:
      tags:
      - Connector Management API
      summary: Check Health of a Connector
      operationId: checkHealth
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Health check completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/{uuid}/attributes-all:
    get:
      tags:
      - Connector Management API
      summary: Get attributes of all Function Groups
      operationId: getAttributesAll
      parameters:
      - name: uuid
        in: path
        description: Connector UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Attributes received
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: '#/components/schemas/AttributeDefinition'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/types:
    get:
      tags:
      - Connector Authentication API
      summary: Get list of Authentication Types
      operationId: getAuthenticationTypes
      responses:
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Auth Types retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /v1/connectors/auth/attributes/jwt:
    get:
      tags:
      - Connector Authentication API
      summary: Get JWT auth Attributes
      operationId: getJWTAuthAttributes
      responses:
        "200":
          description: Attributes retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/certificate:
    get:
      tags:
      - Connector Authentication API
      summary: Get Attributes for certificate auth
      operationId: getCertificateAttributes
      responses:
        "200":
          description: Attributes retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/basic:
    get:
      tags:
      - Connector Authentication API
      summary: Get basic auth Attributes
      operationId: getBasicAuthAttributes
      responses:
        "200":
          description: Attributes retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/auth/attributes/apiKey:
    get:
      tags:
      - Connector Authentication API
      summary: Get API Key auth Attributes
      operationId: getApiKeyAuthAttributes
      responses:
        "200":
          description: Attributes retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinition'
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/connectors/force:
    delete:
      tags:
      - Connector Management API
      summary: Force Delete multiple Connectors
      operationId: bulkForceRemoveConnector
      requestBody:
        description: Connector UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: Connectors deleted
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
components:
  schemas:
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    ConnectDto:
      required:
      - functionGroup
      type: object
      properties:
        functionGroup:
          $ref: '#/components/schemas/FunctionGroupDto'
    EndpointDto:
      required:
      - context
      - method
      - name
      - required
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        context:
          type: string
          description: Context of the Endpoint
          example: /v1
        method:
          type: string
          description: Method to be used for the Endpoint
          example: POST
        required:
          type: boolean
          description: True if the Endpoint is required for implementation
          example: true
      description: List of end points related to functional group
    FunctionGroupDto:
      required:
      - endPoints
      - functionGroupCode
      - kinds
      - name
      - uuid
      type: object
      properties:
        functionGroupCode:
          type: string
          description: Enumerated code of functional group
          enum:
          - credentialProvider
          - legacyAuthorityProvider
          - authorityProvider
          - discoveryProvider
        kinds:
          type: array
          description: List of supported functional group kinds
          example:
          - SoftKeyStore
          - Basic
          - ApiKey
          items:
            type: string
            description: List of supported functional group kinds
            example: "[\"SoftKeyStore\",\"Basic\",\"ApiKey\"]"
        endPoints:
          type: array
          description: List of end points related to functional group
          items:
            $ref: '#/components/schemas/EndpointDto'
        uuid:
          type: string
          description: UUID of the Function Group
          example: 204a57f6-2ed3-45b6-bf09-af8b8c900e33
        name:
          type: string
          description: Function Group Name
      description: Function Group information of a connector
    ConnectRequestDto:
      required:
      - authType
      - url
      type: object
      properties:
        url:
          type: string
          description: URL of the Connector to connect
          example: http://network-discovery-provicer:8080
        uuid:
          type: string
          description: UUID of the Connector. Mandatory if connection is needed for
            the same Connector
        authType:
          type: string
          description: Type of authentication for the Connector
          example: none
          enum:
          - none
          - basic
          - certificate
          - apiKey
          - jwt
        authAttributes:
          type: array
          description: List of authentication Attributes. Required if the authentication
            type is not NONE
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    RequestAttributeDto:
      required:
      - name
      - value
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        value:
          type: object
          description: Value of the Attribute
      description: List of authentication Attributes. Required if the authentication
        type is not NONE
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
        pathVariables:
          type: object
          additionalProperties:
            type: object
            description: Map of path variables supported by the callback method
          description: Map of path variables supported by the callback method
        queryParameters:
          type: object
          additionalProperties:
            type: object
            description: Map of the query parameters supported by the callback method
          description: Map of the query parameters supported by the callback method
        requestBody:
          type: object
          additionalProperties:
            type: object
            description: Request body for the callback method
          description: Request body for the callback method
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          type: string
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            type: string
            description: Set of targets for propagating value.
            enum:
            - pathVariable
            - requestParameter
            - body
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    ConnectorUpdateRequestDto:
      type: object
      properties:
        url:
          type: string
          description: URL of the Connector to connect
          example: http://network-discovery-provicer:8080
        authType:
          type: string
          description: Type of authentication for the Connector
          example: none
          enum:
          - none
          - basic
          - certificate
          - apiKey
          - jwt
        authAttributes:
          type: array
          description: List of authentication Attributes. Required if the authentication
            type is not NONE
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    AttributeDefinition:
      required:
      - editable
      - label
      - multiValue
      - name
      - readOnly
      - required
      - type
      - uuid
      - visible
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          type: string
          description: Type of the Attribute
          enum:
          - STRING
          - SECRET
          - FILE
          - BOOLEAN
          - LIST
          - CREDENTIAL
        required:
          type: boolean
          description: Boolean determining if the Attribute is required
          default: false
        readOnly:
          type: boolean
          description: Boolean determining if the Attribute is read only
          default: false
        editable:
          type: boolean
          description: Boolean determining if the Attribute is editable
          default: true
        visible:
          type: boolean
          description: Boolean determining if the Attribute is visible and can be
            displayed
          default: true
        multiValue:
          type: boolean
          description: Boolean determining if the Attribute has value composed from
            multiple items
          default: false
        description:
          type: string
          description: "Optional description of the Attribute, should contain help\
            \ for setting proper value"
        validationRegex:
          type: string
          description: Optional regular expression used for validating the Attribute
            value
        dependsOn:
          type: array
          description: Optional list of other Attribute names and values on which
            it depends on
          items:
            $ref: '#/components/schemas/AttributeDependency'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
        value:
          type: object
          description: Value of the Attribute
      description: List of Attributes for the authentication type
    AttributeDependency:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: Name of depending attribute
        value:
          type: object
          description: "Value of depending attribute, which should be matched"
      description: Optional list of other Attribute names and values on which it depends
        on
    ConnectorDto:
      required:
      - authType
      - functionGroups
      - name
      - status
      - url
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        functionGroups:
          type: array
          description: List of Function Groups implemented by the Connector
          items:
            $ref: '#/components/schemas/FunctionGroupDto'
        url:
          type: string
          description: URL of the Connector
          example: http://network-discovery-provider:8080
        authType:
          type: string
          description: Type of authentication for the Connector
          example: none
          enum:
          - none
          - basic
          - certificate
          - apiKey
          - jwt
        authAttributes:
          type: array
          description: List of Attributes for the authentication type
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        status:
          type: string
          description: Status of the Connector
          example: CONNECTED
          enum:
          - waitingForApproval
          - registered
          - connected
          - unavailable
          - misconfigured
          - failed
          - offline
    ConnectorRequestDto:
      required:
      - authType
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: Name of the Connector
          example: Connector1
        url:
          type: string
          description: URL of the Connector to connect
          example: http://network-discovery-provicer:8080
        authType:
          type: string
          description: Type of authentication for the Connector
          example: none
          enum:
          - none
          - basic
          - certificate
          - apiKey
          - jwt
        authAttributes:
          type: array
          description: List of authentication Attributes. Required if the authentication
            type is not NONE
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
    HealthDto:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: Current connector operational status
          enum:
          - ok
          - nok
          - unknown
        description:
          type: string
          description: Detailed status description
        parts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HealthDto'
          description: Nested status of services
    ForceDeleteMessageDto:
      required:
      - message
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        name:
          type: string
          description: Object Name
        message:
          type: string
          description: Message describing the associations of the Connector which
            is preventing the delete operation
