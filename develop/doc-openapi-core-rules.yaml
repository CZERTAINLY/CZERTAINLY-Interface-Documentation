openapi: 3.0.1
info:
  title: CZERTAINLY Rules API
  description: REST API for managing Rules in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.11.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Rules Management
  description: Rules Management API
paths:
  /v1/rules/{ruleUuid}:
    get:
      tags:
      - Rules Management
      summary: Get Rule details
      operationId: getRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "200":
          description: Rule details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDetailDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
    put:
      tags:
      - Rules Management
      summary: Update Rule
      operationId: updateRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "200":
          description: Rule details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDetailDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
    delete:
      tags:
      - Rules Management
      summary: Delete Rule
      operationId: deleteRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "204":
          description: Rule deleted
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
  /v1/rules/triggers/{triggerUuid}:
    get:
      tags:
      - Rules Management
      summary: Get Trigger details
      operationId: getTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: Trigger details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTriggerDetailDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
    put:
      tags:
      - Rules Management
      summary: Update Trigger
      operationId: updateTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleTriggerRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "200":
          description: Trigger updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTriggerDetailDto'
        "401":
          description: Unauthorized
    delete:
      tags:
      - Rules Management
      summary: Delete Trigger
      operationId: deleteTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "204":
          description: Trigger deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
  /v1/rules/conditionGroups/{conditionGroupUuid}:
    get:
      tags:
      - Rules Management
      summary: Get Condition Group details
      operationId: getConditionGroup
      parameters:
      - name: conditionGroupUuid
        in: path
        description: Condition Group UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: Condition group details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleConditionGroupDto'
    put:
      tags:
      - Rules Management
      summary: Update Condition Group
      operationId: updateConditionGroup
      parameters:
      - name: conditionGroupUuid
        in: path
        description: Condition Group UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleConditionGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: Condition group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleConditionGroupDto'
    delete:
      tags:
      - Rules Management
      summary: Delete Condition Group
      operationId: deleteConditionGroup
      parameters:
      - name: conditionGroupUuid
        in: path
        description: Condition Group UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "204":
          description: Condition group deleted
        "401":
          description: Unauthorized
  /v1/rules/actionGroups/{actionGroupUuid}:
    get:
      tags:
      - Rules Management
      summary: Get Action Group Details
      operationId: getActionGroup
      parameters:
      - name: actionGroupUuid
        in: path
        description: Action Group UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: Action group details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleActionGroupDto'
    put:
      tags:
      - Rules Management
      summary: Update Action Group
      operationId: updateActionGroup
      parameters:
      - name: actionGroupUuid
        in: path
        description: Action Group UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleActionGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "200":
          description: Action group updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleActionGroupDto'
        "401":
          description: Unauthorized
    delete:
      tags:
      - Rules Management
      summary: Delete Action Group
      operationId: deleteActionGroup
      parameters:
      - name: actionGroupUuid
        in: path
        description: Action Group UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "204":
          description: Action group deleted
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
  /v1/rules:
    get:
      tags:
      - Rules Management
      summary: List Rules
      operationId: listRules
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Resource'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: List of rules fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleDto'
    post:
      tags:
      - Rules Management
      summary: Create Rule
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "201":
          description: Rule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDetailDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
  /v1/rules/triggers:
    get:
      tags:
      - Rules Management
      summary: List Triggers
      operationId: listTriggers
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Resource'
      - name: triggerResource
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Resource'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: List of triggers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleTriggerDto'
    post:
      tags:
      - Rules Management
      summary: Create Trigger
      operationId: createTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleTriggerRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "201":
          description: Trigger created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleTriggerDetailDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
  /v1/rules/conditionGroups:
    get:
      tags:
      - Rules Management
      summary: List Condition Groups
      operationId: listConditionGroups
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Resource'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: List of condition groups fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleConditionGroupDto'
    post:
      tags:
      - Rules Management
      summary: Create Condition Group
      operationId: createConditionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleConditionGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "201":
          description: Condition group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleConditionGroupDto'
        "401":
          description: Unauthorized
  /v1/rules/actionGroups:
    get:
      tags:
      - Rules Management
      summary: List Action Groups
      operationId: listActionGroups
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Resource'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "200":
          description: List of action groups fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleActionGroupDto'
    post:
      tags:
      - Rules Management
      summary: Create Action Group
      operationId: createActionGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleActionGroupRequestDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "401":
          description: Unauthorized
        "201":
          description: Action group created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleActionGroupDto'
components:
  schemas:
    FilterConditionOperator:
      type: string
      description: Operator of the Rule Condition
      enum:
      - EQUALS
      - NOT_EQUALS
      - GREATER
      - GREATER_OR_EQUAL
      - LESSER
      - LESSER_OR_EQUAL
      - CONTAINS
      - NOT_CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - EMPTY
      - NOT_EMPTY
      - SUCCESS
      - FAILED
      - UNKNOWN
      - NOT_CHECKED
    FilterFieldSource:
      type: string
      description: Source of the field in the Condition
      enum:
      - meta
      - custom
      - data
      - property
    RuleConditionRequestDto:
      required:
      - fieldIdentifier
      - fieldSource
      - operator
      type: object
      properties:
        fieldSource:
          $ref: '#/components/schemas/FilterFieldSource'
        fieldIdentifier:
          type: string
          description: Field identifier of the Rule Condition
        operator:
          $ref: '#/components/schemas/FilterConditionOperator'
        value:
          type: object
          description: Value of the Rule Condition
      description: List of conditions to add in the Rule
    UpdateRuleRequestDto:
      type: object
      properties:
        description:
          type: string
          description: Description of the Rule
        resourceType:
          type: string
          description: Type of the Resource associated with the Rule
        resourceFormat:
          type: string
          description: Format of the Resource associated with the Rule
        conditions:
          type: array
          description: List of conditions to add in the Rule
          items:
            $ref: '#/components/schemas/RuleConditionRequestDto'
        conditionGroupsUuids:
          type: array
          description: List of UUIDs of existing condition groups to add in the Rule
          items:
            type: string
            description: List of UUIDs of existing condition groups to add in the
              Rule
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
      description: Optional definition of callback for getting the content of the
        Attribute based on the action
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: '#/components/schemas/AttributeType'
        attributeContentType:
          $ref: '#/components/schemas/AttributeContentType'
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: '#/components/schemas/AttributeValueTarget'
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeConstraintType:
      type: string
      description: Attribute Constraint Type
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      description: 'Type of the attribute content. '
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      description: Type of the attribute. It is optional and must be set only if special
        behaviour is needed.
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      description: Set of targets for propagating value.
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      required:
      - data
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: object
          description: Attribute Constraint Data
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: '#/components/schemas/RegexpAttributeConstraint'
      - $ref: '#/components/schemas/RangeAttributeConstraint'
      - $ref: '#/components/schemas/DateTimeAttributeConstraint'
    BaseAttributeContentDto:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      description: Base Attribute content definition
      oneOf:
      - $ref: '#/components/schemas/BooleanAttributeContent'
      - $ref: '#/components/schemas/CodeBlockAttributeContent'
      - $ref: '#/components/schemas/CredentialAttributeContent'
      - $ref: '#/components/schemas/DateAttributeContent'
      - $ref: '#/components/schemas/DateTimeAttributeContent'
      - $ref: '#/components/schemas/FileAttributeContent'
      - $ref: '#/components/schemas/FloatAttributeContent'
      - $ref: '#/components/schemas/IntegerAttributeContent'
      - $ref: '#/components/schemas/ObjectAttributeContent'
      - $ref: '#/components/schemas/SecretAttributeContent'
      - $ref: '#/components/schemas/StringAttributeContent'
      - $ref: '#/components/schemas/TextAttributeContent'
      - $ref: '#/components/schemas/TimeAttributeContent'
    BooleanAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
    CodeBlockAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/CodeBlockAttributeContentData'
    CodeBlockAttributeContentData:
      required:
      - code
      - language
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ProgrammingLanguageEnum'
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      description: CodeBlock attribute content data
    CredentialAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/CredentialAttributeContentData'
    CredentialAttributeContentData:
      required:
      - attributes
      - kind
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/DataAttribute'
      description: Credential attribute content data
    DataAttribute:
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/DataAttributeProperties'
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: '#/components/schemas/BaseAttributeConstraint'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
    DataAttributeProperties:
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
      description: Properties of the Attributes
    DateAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Date attribute value in format yyyy-MM-dd
          format: date
    DateTimeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/DateTimeAttributeConstraintData'
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          description: Start of the datetime for validation
          format: date-time
        to:
          type: string
          description: End of the datetime for validation
          format: date-time
      description: DateTime Range Attribute Constraint Data
    DateTimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
          format: date-time
    FileAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/FileAttributeContentData'
    FileAttributeContentData:
      required:
      - content
      - fileName
      - mimeType
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      description: File attribute content data
    FloatAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          description: Float attribute value
          format: float
    IntegerAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          description: Integer attribute value
          format: int32
    ObjectAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
    ProgrammingLanguageEnum:
      type: string
      description: Definition of programming languages used for code
      example: "JAVA, PHP, C, etc"
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/RangeAttributeConstraintData'
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          description: Start of the range for validation
          format: int32
        to:
          type: integer
          description: End of the range for validation
          format: int32
      description: Integer Range Attribute Constraint Data
    RegexpAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
    Resource:
      type: string
      description: Resource associated with the Rule Condition Group
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
    ResponseAttributeDto:
      required:
      - contentType
      - label
      - name
      - type
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
      description: Response attribute with content for object it belongs to
    RuleConditionDto:
      required:
      - fieldIdentifier
      - fieldSource
      - operator
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Rule Condition
        fieldSource:
          $ref: '#/components/schemas/FilterFieldSource'
        fieldIdentifier:
          type: string
          description: Field identifier of the Rule Condition
        operator:
          $ref: '#/components/schemas/FilterConditionOperator'
        value:
          type: object
          description: Value of the Rule Condition
      description: List of the Rule Conditions in the Rule Condition Group
    RuleConditionGroupDto:
      required:
      - conditions
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule Condition Group
        resource:
          $ref: '#/components/schemas/Resource'
        conditions:
          type: array
          description: List of the Rule Conditions in the Rule Condition Group
          items:
            $ref: '#/components/schemas/RuleConditionDto'
      description: List of condition groups in the Rule
    RuleDetailDto:
      required:
      - attributes
      - conditionGroups
      - conditions
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        connector_uuid:
          type: string
          description: UUID of the Compliance Connector
        description:
          type: string
          description: Description of the Rule
        resource:
          $ref: '#/components/schemas/Resource'
        resourceType:
          type: string
          description: Type of the Resource associated with the Rule
        resourceFormat:
          type: string
          description: Format of the Resource associated with the Rule
        attributes:
          type: array
          description: Attributes of the Rule
          items:
            $ref: '#/components/schemas/ResponseAttributeDto'
        conditions:
          type: array
          description: List of conditions in the Rule
          items:
            $ref: '#/components/schemas/RuleConditionDto'
        conditionGroups:
          type: array
          description: List of condition groups in the Rule
          items:
            $ref: '#/components/schemas/RuleConditionGroupDto'
    SecretAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/SecretAttributeContentData'
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
      description: Secret attribute content data
    StringAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
    TextAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
    TimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
    RuleActionRequestDto:
      required:
      - actionType
      type: object
      properties:
        actionType:
          $ref: '#/components/schemas/RuleActionType'
        fieldSource:
          $ref: '#/components/schemas/FilterFieldSource'
        fieldIdentifier:
          type: string
          description: Field identifier of the Rule Action
        actionData:
          type: object
          description: Data for the Rule Action
      description: List of new Rule Actions to add in the Rule Trigger
    RuleActionType:
      type: string
      description: "Action Type of the Rule Action,"
      enum:
      - ignore
      - setField
    RuleTriggerType:
      type: string
      description: Type of the Rule Trigger
      enum:
      - event
      - manual
    UpdateRuleTriggerRequestDto:
      required:
      - triggerType
      type: object
      properties:
        description:
          type: string
          description: Description of the Rule Trigger
        triggerType:
          $ref: '#/components/schemas/RuleTriggerType'
        eventName:
          type: string
          description: Name of the event of the Rule Trigger
        triggerResource:
          $ref: '#/components/schemas/Resource'
        rulesUuids:
          type: array
          description: List of UUIDs of existing Rules to add in the Rule Trigger
          items:
            type: string
            description: List of UUIDs of existing Rules to add in the Rule Trigger
        actionGroupsUuids:
          type: array
          description: List of UUIDs of existing Action Groups to add in the Rule
            Trigger
          items:
            type: string
            description: List of UUIDs of existing Action Groups to add in the Rule
              Trigger
        actions:
          type: array
          description: List of new Rule Actions to add in the Rule Trigger
          items:
            $ref: '#/components/schemas/RuleActionRequestDto'
    RuleActionDto:
      required:
      - actionType
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Rule Condition
        actionType:
          $ref: '#/components/schemas/RuleActionType'
        fieldSource:
          $ref: '#/components/schemas/FilterFieldSource'
        fieldIdentifier:
          type: string
          description: Field identifier of the Rule Action
        actionData:
          type: object
          description: Data of the Rule Action
      description: List of Rule Actions in the Rule Trigger
    RuleActionGroupDto:
      required:
      - actions
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule Action Group
        resource:
          $ref: '#/components/schemas/Resource'
        actions:
          type: array
          description: List of Rule Actions in the Rule Actions Group
          items:
            $ref: '#/components/schemas/RuleActionDto'
      description: List of Action Groups in the Rule Trigger
    RuleDto:
      required:
      - attributes
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        connector_uuid:
          type: string
          description: UUID of the Compliance Connector
        description:
          type: string
          description: Description of the Rule
        resource:
          $ref: '#/components/schemas/Resource'
        resourceType:
          type: string
          description: Type of the Resource associated with the Rule
        resourceFormat:
          type: string
          description: Format of the Resource associated with the Rule
        attributes:
          type: array
          description: Attributes of the Rule
          items:
            $ref: '#/components/schemas/ResponseAttributeDto'
      description: List of Rules in the Rule Trigger
    RuleTriggerDetailDto:
      required:
      - actionGroups
      - actions
      - name
      - resource
      - rules
      - triggerType
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule Trigger
        triggerType:
          $ref: '#/components/schemas/RuleTriggerType'
        eventName:
          type: string
          description: Name of the event of the Rule Trigger
        resource:
          $ref: '#/components/schemas/Resource'
        triggerResource:
          $ref: '#/components/schemas/Resource'
        rules:
          type: array
          description: List of Rules in the Rule Trigger
          items:
            $ref: '#/components/schemas/RuleDto'
        actionGroups:
          type: array
          description: List of Action Groups in the Rule Trigger
          items:
            $ref: '#/components/schemas/RuleActionGroupDto'
        actions:
          type: array
          description: List of Rule Actions in the Rule Trigger
          items:
            $ref: '#/components/schemas/RuleActionDto'
    UpdateRuleConditionGroupRequestDto:
      required:
      - conditions
      type: object
      properties:
        description:
          type: string
          description: Description of the Rule Condition Group
        conditions:
          type: array
          description: List of the Rule Conditions to add in the Rule Condition Group
          items:
            $ref: '#/components/schemas/RuleConditionRequestDto'
    UpdateRuleActionGroupRequestDto:
      required:
      - actions
      type: object
      properties:
        description:
          type: string
          description: Description of the Rule Action Group
        actions:
          type: array
          description: List of new Rule Actions to add in the Rule Actions Group
          items:
            $ref: '#/components/schemas/RuleActionRequestDto'
    RuleRequestDto:
      required:
      - name
      - resource
      type: object
      properties:
        name:
          type: string
          description: Name of the Rule
        description:
          type: string
          description: Description of the Rule
        resource:
          $ref: '#/components/schemas/Resource'
        resourceType:
          type: string
          description: Type of the Resource associated with the Rule
        resourceFormat:
          type: string
          description: Format of the Resource associated with the Rule
        conditions:
          type: array
          description: List of conditions to add in the Rule
          items:
            $ref: '#/components/schemas/RuleConditionRequestDto'
        conditionGroupsUuids:
          type: array
          description: List of UUIDs of existing condition groups to add in the Rule
          items:
            type: string
            description: List of UUIDs of existing condition groups to add in the
              Rule
    RuleTriggerRequestDto:
      required:
      - name
      - triggerType
      type: object
      properties:
        name:
          type: string
          description: Name of the Rule Trigger
        description:
          type: string
          description: Description of the Rule Trigger
        triggerType:
          $ref: '#/components/schemas/RuleTriggerType'
        eventName:
          type: string
          description: Name of the event of the Rule Trigger
        resource:
          $ref: '#/components/schemas/Resource'
        triggerResource:
          $ref: '#/components/schemas/Resource'
        rulesUuids:
          type: array
          description: List of UUIDs of existing Rules to add in the Rule Trigger
          items:
            type: string
            description: List of UUIDs of existing Rules to add in the Rule Trigger
        actionGroupsUuids:
          type: array
          description: List of UUIDs of existing Action Groups to add in the Rule
            Trigger
          items:
            type: string
            description: List of UUIDs of existing Action Groups to add in the Rule
              Trigger
        actions:
          type: array
          description: List of new Rule Actions to add in the Rule Trigger
          items:
            $ref: '#/components/schemas/RuleActionRequestDto'
    RuleConditionGroupRequestDto:
      required:
      - conditions
      - name
      - resource
      type: object
      properties:
        name:
          type: string
          description: Name of the Rule Condition Group
        description:
          type: string
          description: Description of the Rule Condition Group
        resource:
          $ref: '#/components/schemas/Resource'
        conditions:
          type: array
          description: List of the Rule Conditions to add in the Rule Condition Group
          items:
            $ref: '#/components/schemas/RuleConditionRequestDto'
    RuleActionGroupRequestDto:
      required:
      - actions
      - name
      - resource
      type: object
      properties:
        name:
          type: string
          description: Name of the Rule Action Group
        description:
          type: string
          description: Description of the Rule Action Group
        resource:
          $ref: '#/components/schemas/Resource'
        actions:
          type: array
          description: List of new Rule Actions to add in the Rule Actions Group
          items:
            $ref: '#/components/schemas/RuleActionRequestDto'
    RuleTriggerDto:
      required:
      - name
      - resource
      - triggerType
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule Trigger
        triggerType:
          $ref: '#/components/schemas/RuleTriggerType'
        eventName:
          type: string
          description: Name of the event of the Rule Trigger
        resource:
          $ref: '#/components/schemas/Resource'
        triggerResource:
          $ref: '#/components/schemas/Resource'
