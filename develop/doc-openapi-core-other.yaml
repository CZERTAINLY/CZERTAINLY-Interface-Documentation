openapi: 3.0.1
info:
  title: CZERTAINLY Uncategorized API
  description: Various uncategorized REST APIs of the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  version: 1.6.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Audit Log
  description: Audit Log API
- name: Statistics/Dashboard
  description: Statistics/Dashboard API
- name: Settings
  description: Settings API
paths:
  /v1/settings:
    get:
      tags:
      - Settings
      summary: Get sections settings
      operationId: getSettings
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: Sections settings details retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionSettingsDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
    put:
      tags:
      - Settings
      summary: Update setting
      operationId: updateSettings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/RequestAttributeDto'
        required: true
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: Setting updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionSettingsDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/statistics:
    get:
      tags:
      - Statistics/Dashboard
      summary: Get Dashboard/Statistics Details
      operationId: getStatistics
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: Details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/settings/sections:
    get:
      tags:
      - Settings
      summary: Get settings sections
      operationId: getSections
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "200":
          description: Settings sections retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/settings/all:
    get:
      tags:
      - Settings
      summary: Get all settings extracted from attributes in dedicated DTO
      operationId: getAllSettings
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Settings details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllSettingsDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs:
    get:
      tags:
      - Audit Log
      summary: List Audit logs
      operationId: listAuditLogs
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AuditLogFilter'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "200":
          description: List of audit logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogResponseDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs/statuses:
    get:
      tags:
      - Audit Log
      summary: List Status
      operationId: listOperationStatuses
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: List of audit log status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs/purge:
    get:
      tags:
      - Audit Log
      summary: Purge Audit logs
      operationId: purgeAuditLogs
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AuditLogFilter'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "204":
          description: Audit logs purged
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs/operations:
    get:
      tags:
      - Audit Log
      summary: List Audit Operations
      operationId: listOperations
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: List of audit operations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs/objects:
    get:
      tags:
      - Audit Log
      summary: List Audit Objects
      operationId: listObjects
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: List of audit Objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/auditLogs/export:
    get:
      tags:
      - Audit Log
      summary: Export Audit logs
      operationId: exportAuditLogs
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AuditLogFilter'
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: Export of audit logs
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
components:
  schemas:
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
      description: Optional definition of callback for getting the content of the
        Attribute based on the action
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: '#/components/schemas/AttributeType'
        attributeContentType:
          $ref: '#/components/schemas/AttributeContentType'
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: '#/components/schemas/AttributeValueTarget'
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeConstraintType:
      type: string
      description: Attribute Constraint Type
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      description: 'Type of the attribute content. '
      enum:
      - string
      - integer
      - secret
      - file
      - boolean
      - credential
      - date
      - float
      - object
      - text
      - time
      - datetime
      - codeblock
    AttributeType:
      type: string
      description: Type of the attribute. It is optional and must be set only if special
        behaviour is needed.
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      description: Set of targets for propagating value.
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      required:
      - data
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: object
          description: Attribute Constraint Data
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: '#/components/schemas/RegexpAttributeConstraint'
      - $ref: '#/components/schemas/RangeAttributeConstraint'
      - $ref: '#/components/schemas/DateTimeAttributeConstraint'
    BaseAttributeContentDto:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      description: Base Attribute content definition
      oneOf:
      - $ref: '#/components/schemas/BooleanAttributeContent'
      - $ref: '#/components/schemas/CodeBlockAttributeContent'
      - $ref: '#/components/schemas/CredentialAttributeContent'
      - $ref: '#/components/schemas/DateAttributeContent'
      - $ref: '#/components/schemas/DateTimeAttributeContent'
      - $ref: '#/components/schemas/FileAttributeContent'
      - $ref: '#/components/schemas/FloatAttributeContent'
      - $ref: '#/components/schemas/IntegerAttributeContent'
      - $ref: '#/components/schemas/ObjectAttributeContent'
      - $ref: '#/components/schemas/SecretAttributeContent'
      - $ref: '#/components/schemas/StringAttributeContent'
      - $ref: '#/components/schemas/TextAttributeContent'
      - $ref: '#/components/schemas/TimeAttributeContent'
    BooleanAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
    CodeBlockAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/CodeBlockAttributeContentData'
    CodeBlockAttributeContentData:
      required:
      - code
      - language
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ProgrammingLanguageEnum'
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      description: CodeBlock attribute content data
    CredentialAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/CredentialAttributeContentData'
    CredentialAttributeContentData:
      required:
      - attributes
      - kind
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/DataAttribute'
      description: Credential attribute content data
    DataAttribute:
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/DataAttributeProperties'
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: '#/components/schemas/BaseAttributeConstraint'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
    DataAttributeProperties:
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
      description: Properties of the Attributes
    DateAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Date attribute value in format yyyy-MM-dd
          format: date
    DateTimeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/DateTimeAttributeConstraintData'
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          description: Start of the datetime for validation
          format: date-time
        to:
          type: string
          description: End of the datetime for validation
          format: date-time
      description: DateTime Range Attribute Constraint Data
    DateTimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
          format: date-time
    FileAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/FileAttributeContentData'
    FileAttributeContentData:
      required:
      - content
      - fileName
      - mimeType
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          $ref: '#/components/schemas/MimeType'
      description: File attribute content data
    FloatAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          description: Float attribute value
          format: float
    IntegerAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          description: Integer attribute value
          format: int32
    MimeType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
        subtypeSuffix:
          type: string
        concrete:
          type: boolean
        charset:
          type: string
      description: Type of the file uploaded
    ObjectAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
    ProgrammingLanguageEnum:
      type: string
      description: Definition of programming languages used for code
      example: "JAVA, PHP, C, etc"
      enum:
      - css
      - clike
      - javascript
      - abap
      - actionscript
      - ada
      - apacheconf
      - apl
      - applescript
      - arduino
      - arff
      - asciidoc
      - asm6502
      - aspnet
      - autohotkey
      - autoit
      - bash
      - basic
      - batch
      - bison
      - brainfuck
      - bro
      - c
      - csharp
      - cpp
      - coffeescript
      - clojure
      - crystal
      - csp
      - css-extras
      - d
      - dart
      - diff
      - django
      - docker
      - eiffel
      - elixir
      - elm
      - erb
      - erlang
      - fsharp
      - flow
      - fortran
      - gedcom
      - gherkin
      - git
      - glsl
      - gml
      - go
      - graphql
      - groovy
      - haml
      - handlebars
      - haskell
      - haxe
      - http
      - hpkp
      - hsts
      - ichigojam
      - icon
      - inform7
      - ini
      - io
      - j
      - java
      - jolie
      - json
      - julia
      - keyman
      - kotlin
      - latex
      - less
      - liquid
      - lisp
      - livescript
      - lolcode
      - lua
      - makefile
      - markdown
      - markup-templating
      - matlab
      - mel
      - mizar
      - monkey
      - n4js
      - nasm
      - nginx
      - nim
      - nix
      - nsis
      - objectivec
      - ocaml
      - opencl
      - oz
      - parigp
      - parser
      - pascal
      - perl
      - php
      - php-extras
      - plsql
      - powershell
      - processing
      - prolog
      - properties
      - protobuf
      - pug
      - puppet
      - pure
      - python
      - q
      - qore
      - r
      - jsx
      - tsx
      - renpy
      - reason
      - rest
      - rip
      - roboconf
      - ruby
      - rust
      - sas
      - sass
      - scss
      - scala
      - scheme
      - smalltalk
      - smarty
      - sql
      - soy
      - stylus
      - swift
      - tap
      - tcl
      - textile
      - tt2
      - twig
      - typescript
      - vbnet
      - velocity
      - verilog
      - vhdl
      - vim
      - visual-basic
      - wasm
      - wiki
      - xeora
      - xojo
      - xquery
      - yaml
    RangeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/RangeAttributeConstraintData'
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          description: Start of the range for validation
          format: int32
        to:
          type: integer
          description: End of the range for validation
          format: int32
      description: Integer Range Attribute Constraint Data
    RegexpAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
    RequestAttributeDto:
      required:
      - content
      - name
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
      description: Request attribute to send attribute content for object
    SecretAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/SecretAttributeContentData'
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
      description: Secret attribute content data
    StringAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
    TextAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
    TimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    BaseAttributeDto:
      required:
      - name
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        type:
          $ref: '#/components/schemas/AttributeType'
        content:
          type: object
          description: Content of the Attribute
      description: Base Attribute definition
      discriminator:
        propertyName: type
        mapping:
          data: '#/components/schemas/DataAttribute'
          info: '#/components/schemas/InfoAttribute'
          group: '#/components/schemas/GroupAttribute'
          meta: '#/components/schemas/MetadataAttribute'
          custom: '#/components/schemas/CustomAttribute'
      oneOf:
      - $ref: '#/components/schemas/DataAttribute'
      - $ref: '#/components/schemas/InfoAttribute'
      - $ref: '#/components/schemas/GroupAttribute'
      - $ref: '#/components/schemas/MetadataAttribute'
      - $ref: '#/components/schemas/CustomAttribute'
    CustomAttribute:
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/CustomAttributeProperties'
      description: Custom attribute allows to store and transfer dynamic data. Its
        content can be edited and send in requests to store.
    CustomAttributeProperties:
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
      description: Properties of the Attributes
    GroupAttribute:
      required:
      - name
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: List of all different types of attributes
          items:
            $ref: '#/components/schemas/BaseAttributeDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
      description: Group attribute and its content represents dynamic list of additional
        attributes retrieved by callback. Its content can not be edited and is not
        send in requests to store.
    InfoAttribute:
      required:
      - content
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/InfoAttributeProperties'
      description: Info attribute contains content that is for information purpose
        or represents additional information for object (metadata). Its content can
        not be edited and is not send in requests to store.
    InfoAttributeProperties:
      required:
      - label
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      description: Properties of the Attributes
    MetadataAttribute:
      required:
      - content
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/MetadataAttributeProperties'
      description: Info attribute contains content that is for metadata. Its content
        can not be edited and is not send in requests to store.
    MetadataAttributeProperties:
      required:
      - label
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        global:
          type: boolean
          description: Boolean determining if the Metadata is a global metadata.
          default: false
      description: Properties of the Attributes
    ResponseAttributeDto:
      required:
      - contentType
      - label
      - name
      - type
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContentDto'
      description: Response attribute with content for object it belongs to
    Section:
      type: string
      description: Setting section
      enum:
      - general
    SectionSettingsDto:
      required:
      - attributeDefinitions
      - attributes
      - name
      - section
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        section:
          $ref: '#/components/schemas/Section'
        description:
          type: string
          description: Description of Settings section
        attributeDefinitions:
          type: array
          description: List of setting section attributes definitions
          items:
            $ref: '#/components/schemas/BaseAttributeDto'
        attributes:
          type: array
          description: List of setting section attributes
          items:
            $ref: '#/components/schemas/ResponseAttributeDto'
    StatisticsDto:
      type: object
      properties:
        totalCertificates:
          type: integer
          description: Number Certificates available
          format: int64
        totalGroups:
          type: integer
          description: Number of Groups
          format: int64
        totalDiscoveries:
          type: integer
          description: Number of Discoveries triggered
          format: int64
        totalConnectors:
          type: integer
          description: Number of Connectors added
          format: int64
        totalRaProfiles:
          type: integer
          description: Number of RA Profiles in the platform
          format: int64
        totalCredentials:
          type: integer
          description: Number of Credentials
          format: int64
        totalAuthorities:
          type: integer
          description: Number of Authority instances
          format: int64
        totalAdministrators:
          type: integer
          description: Number of Administrators
          format: int64
        totalClients:
          type: integer
          description: Number of Clients added
          format: int64
        groupStatByCertificateCount:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by Group
            format: int64
          description: Map of Certificate count by Group
        raProfileStatByCertificateCount:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by RA Profile
            format: int64
          description: Map of Certificate count by RA Profile
        certificateStatByType:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by Type
            format: int64
          description: Map of Certificate count by Type
        certificateStatByExpiry:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by expiry date
            format: int64
          description: Map of Certificate count by expiry date
        certificateStatByKeySize:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by key size
            format: int64
          description: Map of Certificate count by key size
        certificateStatByBasicConstraints:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by basic constraints
            format: int64
          description: Map of Certificate count by basic constraints
        certificateStatByStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by status
            format: int64
          description: Map of Certificate count by status
        certificateStatByComplianceStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of Certificate count by compliance status
            format: int64
          description: Map of Certificate count by compliance status
        connectorStatByStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of Connector count by status
            format: int64
          description: Map of Connector count by status
        raProfileStatByStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of RA Profile count by status
            format: int64
          description: Map of RA Profile count by status
        administratorStatByStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of Administrator count by status
            format: int64
          description: Map of Administrator count by status
        clientStatByStatus:
          type: object
          additionalProperties:
            type: integer
            description: Map of Client count by status
            format: int64
          description: Map of Client count by status
    SectionDto:
      required:
      - name
      - section
      type: object
      properties:
        section:
          $ref: '#/components/schemas/Section'
        name:
          type: string
          description: Setting section display name
        description:
          type: string
          description: Setting section description
    AllSettingsDto:
      required:
      - general
      type: object
      properties:
        general:
          $ref: '#/components/schemas/GeneralSettingsDto'
    GeneralSettingsDto:
      type: object
      properties:
        utilsServiceUrl:
          type: string
          description: URL of the Util Service
          example: http://util-service:8080
      description: General setting
    AuditLogFilter:
      type: object
      properties:
        author:
          type: string
          description: Author of the action triggered audit log
        createdFrom:
          type: string
          description: Start time of the filter
          format: date
        createdTo:
          type: string
          description: End time of the filter
          format: date
        operationStatus:
          type: string
          description: Status of the filter
          enum:
          - SUCCESS
          - FAILURE
        origination:
          type: string
          description: Module triggered the action
          enum:
          - ACCESS
          - RA_PROFILE
          - CLIENT
          - ADMINISTRATOR
          - FE
          - BE
          - CA
          - END_ENTITY
          - END_ENTITY_PROFILE
          - END_ENTITY_CERTIFICATE
          - AUDIT_LOG
          - ATTRIBUTES
          - CA_INSTANCE
          - CREDENTIAL
          - CONNECTOR
          - DISCOVERY
          - HEALTH
          - ENTITY
          - GROUP
          - CERTIFICATE
          - STATISTICS
          - ACME_PROFILE
          - ACME_ACCOUNT
          - COMPLIANCE_PROFILE
          - COMPLIANCE_RULE
          - COMPLIANCE_GROUP
          - LOCALHOST
          - TOKEN_PROFILE
          - TOKEN_INSTANCE
          - CRYPTOGRAPHIC_KEY
          - CRYPTOGRAPHIC_OPERATIONS
        affected:
          type: string
          description: Module affected by the action
          enum:
          - ACCESS
          - RA_PROFILE
          - CLIENT
          - ADMINISTRATOR
          - FE
          - BE
          - CA
          - END_ENTITY
          - END_ENTITY_PROFILE
          - END_ENTITY_CERTIFICATE
          - AUDIT_LOG
          - ATTRIBUTES
          - CA_INSTANCE
          - CREDENTIAL
          - CONNECTOR
          - DISCOVERY
          - HEALTH
          - ENTITY
          - GROUP
          - CERTIFICATE
          - STATISTICS
          - ACME_PROFILE
          - ACME_ACCOUNT
          - COMPLIANCE_PROFILE
          - COMPLIANCE_RULE
          - COMPLIANCE_GROUP
          - LOCALHOST
          - TOKEN_PROFILE
          - TOKEN_INSTANCE
          - CRYPTOGRAPHIC_KEY
          - CRYPTOGRAPHIC_OPERATIONS
        objectIdentifier:
          type: string
          description: Identifier of the object created
        operation:
          type: string
          description: Type of the operation
          enum:
          - CREATE
          - DELETE
          - CHANGE
          - ENABLE
          - DISABLE
          - AUTH
          - REQUEST
          - ISSUE
          - RENEW
          - REVOKE
          - RESET
          - START
          - STOP
          - VALIDATE
          - CALLBACK
          - CONNECT
          - FORCE_DELETE
          - ENCRYPT
          - DECRYPT
          - SIGN
          - VERIFY
          - APPROVE
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    AuditLogDto:
      required:
      - affected
      - author
      - created
      - id
      - objectIdentifier
      - operation
      - operationStatus
      - origination
      - uuid
      type: object
      properties:
        id:
          type: integer
          description: Audit log Id
          format: int64
        uuid:
          type: string
          description: Audit log UUID
        author:
          type: string
          description: Requestor of the change
        created:
          type: string
          description: Time when the audit log is registered
          format: date-time
        operationStatus:
          type: string
          description: Status of the operation. Either success or failed
          enum:
          - SUCCESS
          - FAILURE
        origination:
          type: string
          description: Module triggered the action
          enum:
          - ACCESS
          - RA_PROFILE
          - CLIENT
          - ADMINISTRATOR
          - FE
          - BE
          - CA
          - END_ENTITY
          - END_ENTITY_PROFILE
          - END_ENTITY_CERTIFICATE
          - AUDIT_LOG
          - ATTRIBUTES
          - CA_INSTANCE
          - CREDENTIAL
          - CONNECTOR
          - DISCOVERY
          - HEALTH
          - ENTITY
          - GROUP
          - CERTIFICATE
          - STATISTICS
          - ACME_PROFILE
          - ACME_ACCOUNT
          - COMPLIANCE_PROFILE
          - COMPLIANCE_RULE
          - COMPLIANCE_GROUP
          - LOCALHOST
          - TOKEN_PROFILE
          - TOKEN_INSTANCE
          - CRYPTOGRAPHIC_KEY
          - CRYPTOGRAPHIC_OPERATIONS
        affected:
          type: string
          description: Module affected by the operation
          enum:
          - ACCESS
          - RA_PROFILE
          - CLIENT
          - ADMINISTRATOR
          - FE
          - BE
          - CA
          - END_ENTITY
          - END_ENTITY_PROFILE
          - END_ENTITY_CERTIFICATE
          - AUDIT_LOG
          - ATTRIBUTES
          - CA_INSTANCE
          - CREDENTIAL
          - CONNECTOR
          - DISCOVERY
          - HEALTH
          - ENTITY
          - GROUP
          - CERTIFICATE
          - STATISTICS
          - ACME_PROFILE
          - ACME_ACCOUNT
          - COMPLIANCE_PROFILE
          - COMPLIANCE_RULE
          - COMPLIANCE_GROUP
          - LOCALHOST
          - TOKEN_PROFILE
          - TOKEN_INSTANCE
          - CRYPTOGRAPHIC_KEY
          - CRYPTOGRAPHIC_OPERATIONS
        objectIdentifier:
          type: string
          description: Object identifier
        operation:
          type: string
          description: Type of operation performed
          enum:
          - CREATE
          - DELETE
          - CHANGE
          - ENABLE
          - DISABLE
          - AUTH
          - REQUEST
          - ISSUE
          - RENEW
          - REVOKE
          - RESET
          - START
          - STOP
          - VALIDATE
          - CALLBACK
          - CONNECT
          - FORCE_DELETE
          - ENCRYPT
          - DECRYPT
          - SIGN
          - VERIFY
          - APPROVE
        additionalData:
          type: string
      description: Audit log items
    AuditLogResponseDto:
      required:
      - items
      - page
      - size
      - totalPages
      type: object
      properties:
        page:
          type: integer
          description: Page number
          format: int32
        size:
          type: integer
          description: Size of the data per page
          format: int32
        totalPages:
          type: integer
          description: Number of pages
          format: int32
        items:
          type: array
          description: Audit log items
          items:
            $ref: '#/components/schemas/AuditLogDto'
