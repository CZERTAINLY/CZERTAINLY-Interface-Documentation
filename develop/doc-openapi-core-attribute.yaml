openapi: 3.0.1
info:
  title: CZERTAINLY Attribute API
  description: REST API for managing Custom attributes and global metadata in the
    platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  version: 1.5.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Custom Attributes
  description: Custom Attributes API
- name: Global Metadata
  description: Global Metadata API
paths:
  /v1/attributes/metadata/{uuid}:
    get:
      tags:
      - Global Metadata
      summary: Global Metadata details
      operationId: getGlobalMetadata
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "200":
          description: Global Metadata details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalMetadataDefinitionDetailDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    put:
      tags:
      - Global Metadata
      summary: Edit Global Metadata
      operationId: editGlobalMetadata
      parameters:
      - name: uuid
        in: path
        description: Global Metadata UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalMetadataUpdateRequestDto'
        required: true
      responses:
        "200":
          description: Global Metadata updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalMetadataDefinitionDetailDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Global Metadata
      summary: Delete Global Metadata
      operationId: deleteGlobalMetadata
      parameters:
      - name: uuid
        in: path
        description: Global Metadata UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Global Metadata deleted
  /v1/attributes/custom/{uuid}:
    get:
      tags:
      - Custom Attributes
      summary: Custom Attribute details
      operationId: getCustomAttribute
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Custom Attribute details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAttributeDefinitionDetailDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    put:
      tags:
      - Custom Attributes
      summary: Edit Custom Attribute
      operationId: editCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Attribute UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomAttributeUpdateRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomAttributeDefinitionDetailDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Custom Attributes
      summary: Delete Custom Attribute
      operationId: deleteCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Custom Attribute deleted
  /v1/attributes/metadata/promote:
    get:
      tags:
      - Global Metadata
      summary: Get Available Connector Metadata
      operationId: getConnectorMetadata
      parameters:
      - name: connectorUuid
        in: query
        required: false
        schema:
          type: string
      responses:
        "204":
          description: Connector Metadata retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorMetadataResponseDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Global Metadata
      summary: Promote Connector Metadata to Global Metadata
      operationId: promoteConnectorMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorMetadataPromotionRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "204":
          description: Connector Metadata promoted to global metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalMetadataDefinitionDetailDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/metadata:
    get:
      tags:
      - Global Metadata
      summary: List Global Metadata
      operationId: listGlobalMetadata
      responses:
        "200":
          description: list of available Global Metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinitionDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Global Metadata
      summary: Create Global Metadata
      operationId: createGlobalMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalMetadataCreateRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "201":
          description: Global Metadata created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Global Metadata
      summary: Delete multiple Global Metadata
      operationId: bulkDeleteGlobalMetadata
      requestBody:
        description: Global Metadata UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Global Metadata deleted
  /v1/attributes/custom:
    get:
      tags:
      - Custom Attributes
      summary: List Custom Attributes
      operationId: listCustomAttributes
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "200":
          description: list of available Custom Attributes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeDefinitionDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    post:
      tags:
      - Custom Attributes
      summary: Create Custom Attribute
      operationId: createCustomAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomAttributeCreateRequestDto'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "201":
          description: Custom Attribute created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
    delete:
      tags:
      - Custom Attributes
      summary: Delete multiple Custom Attributes
      operationId: bulkDeleteCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "204":
          description: Custom Attributes deleted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/{uuid}/resources:
    patch:
      tags:
      - Custom Attributes
      summary: Associate Custom Attribute to Resource
      operationId: updateResources
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      requestBody:
        description: List of Resources
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - raProfiles
            - authorities
        required: true
      responses:
        "204":
          description: Custom Attribute associated to the resources
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/{uuid}/enable:
    patch:
      tags:
      - Custom Attributes
      summary: Enable Custom Attribute
      operationId: enableCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "204":
          description: Custom Attribute enabled
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/{uuid}/disable:
    patch:
      tags:
      - Custom Attributes
      summary: Disable Custom Attribute
      operationId: disableCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Custom Attribute disabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/enable:
    patch:
      tags:
      - Custom Attributes
      summary: Enable multiple Custom Attributes
      operationId: bulkEnableCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "204":
          description: Custom Attributes enabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/disable:
    patch:
      tags:
      - Custom Attributes
      summary: Disable multiple Custom Attributes
      operationId: bulkDisableCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "204":
          description: Custom Attributes disabled
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/resources/{resource}:
    get:
      tags:
      - Custom Attributes
      summary: Get Custom Attributes for a resource
      operationId: getResourceCustomAttributes
      parameters:
      - name: resource
        in: path
        description: Resource Name
        required: true
        schema:
          $ref: '#/components/schemas/Resource'
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "200":
          description: Custom Attribute retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseAttributeDto'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /v1/attributes/custom/resources:
    get:
      tags:
      - Custom Attributes
      summary: Get available resources for Custom Attributes
      operationId: getResources
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "200":
          description: Custom Attribute retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
components:
  schemas:
    GlobalMetadataUpdateRequestDto:
      required:
      - description
      - label
      type: object
      properties:
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    AttributeContentType:
      type: string
      description: Attribute Content Type
      enum:
      - string
      - integer
      - secret
      - file
      - boolean
      - credential
      - date
      - float
      - object
      - text
      - time
      - datetime
    AttributeType:
      type: string
      description: Type of the Attribute
      example: custom
      default: custom
      enum:
      - data
      - group
      - info
      - meta
      - custom
    GlobalMetadataDefinitionDetailDto:
      required:
      - contentType
      - description
      - label
      - name
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
        type:
          $ref: '#/components/schemas/AttributeType'
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
    BaseAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      description: Predefined content for the attribute if needed. The content of
        the Attribute must satisfy the type
    CustomAttributeUpdateRequestDto:
      required:
      - description
      - label
      type: object
      properties:
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
    CustomAttributeDefinitionDetailDto:
      required:
      - contentType
      - description
      - label
      - name
      - required
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
        type:
          $ref: '#/components/schemas/AttributeType'
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
        resources:
          type: array
          description: List of resources which are allowed to use the Custom Attribute
          items:
            $ref: '#/components/schemas/Resource'
    Resource:
      type: string
      description: List of resources which are allowed to use the Custom Attribute
      enum:
      - NONE
      - dashboard
      - auditLogs
      - credentials
      - connectors
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateGroups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - attributes
    ConnectorMetadataPromotionRequestDto:
      required:
      - connectorUuid
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Metadata UUID
        connectorUuid:
          type: string
          description: Connector UUID
    GlobalMetadataCreateRequestDto:
      required:
      - contentType
      - description
      - label
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
    CustomAttributeCreateRequestDto:
      required:
      - contentType
      - description
      - label
      - name
      type: object
      properties:
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
    ConnectorMetadataResponseDto:
      required:
      - connectorUuid
      - contentType
      - label
      - name
      - uuid
      type: object
      properties:
        name:
          type: string
          description: Metadata Name
        uuid:
          type: string
          description: Metadata UUID
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        label:
          type: string
          description: Metadata Label
        connectorUuid:
          type: string
          description: Connector UUID
    AttributeDefinitionDto:
      required:
      - contentType
      - description
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: '#/components/schemas/AttributeCallbackMapping'
      description: Optional definition of callback for getting the content of the
        Attribute based on the action
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: '#/components/schemas/AttributeType'
        attributeContentType:
          $ref: '#/components/schemas/AttributeContentType'
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: '#/components/schemas/AttributeValueTarget'
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeConstraintType:
      type: string
      description: Attribute Constraint Type
      enum:
      - regExp
      - range
      - dateTime
    AttributeValueTarget:
      type: string
      description: Set of targets for propagating value.
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      required:
      - data
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: object
          description: Attribute Constraint Data
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: '#/components/schemas/RegexpAttributeConstraint'
      - $ref: '#/components/schemas/RangeAttributeConstraint'
      - $ref: '#/components/schemas/DateTimeAttributeConstraint'
    BaseAttributeDto:
      required:
      - name
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        type:
          $ref: '#/components/schemas/AttributeType'
        content:
          type: object
          description: Content of the Attribute
      description: Base Attribute definition
      discriminator:
        propertyName: type
        mapping:
          data: '#/components/schemas/DataAttribute'
          info: '#/components/schemas/InfoAttribute'
          group: '#/components/schemas/GroupAttribute'
          meta: '#/components/schemas/InfoAttribute'
          custom: '#/components/schemas/DataAttribute'
      oneOf:
      - $ref: '#/components/schemas/DataAttribute'
      - $ref: '#/components/schemas/InfoAttribute'
      - $ref: '#/components/schemas/GroupAttribute'
    DataAttribute:
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/DataAttributeProperties'
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: '#/components/schemas/BaseAttributeConstraint'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
    DataAttributeProperties:
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
      description: Properties of the Attributes
    DateTimeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/DateTimeAttributeConstraintData'
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          description: Start of the datetime for validation
          format: date-time
        to:
          type: string
          description: End of the datetime for validation
          format: date-time
      description: DateTime Range Attribute Constraint Data
    GroupAttribute:
      required:
      - name
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: List of all different types of attributes
          items:
            $ref: '#/components/schemas/BaseAttributeDto'
        type:
          $ref: '#/components/schemas/AttributeType'
        attributeCallback:
          $ref: '#/components/schemas/AttributeCallback'
      description: Group attribute and its content represents dynamic list of additional
        attributes retrieved by callback. Its content can not be edited and is not
        send in requests to store.
    InfoAttribute:
      required:
      - content
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        properties:
          $ref: '#/components/schemas/InfoAttributeProperties'
      description: Info attribute contains content that is for information purpose
        or represents additional information for object (metadata). Its content can
        not be edited and is not send in requests to store.
    InfoAttributeProperties:
      required:
      - label
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      description: Properties of the Attributes
    RangeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          $ref: '#/components/schemas/RangeAttributeConstraintData'
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          description: Start of the range for validation
          format: int32
        to:
          type: integer
          description: End of the range for validation
          format: int32
      description: Integer Range Attribute Constraint Data
    RegexpAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: '#/components/schemas/AttributeConstraintType'
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
