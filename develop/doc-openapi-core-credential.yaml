openapi: 3.0.1
info:
  title: CZERTAINLY Credential API
  description: REST API for managing Credentials in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: getinfo@czertainly.com
  license:
    name: MIT License
    url: https://github.com/3KeyCompany/CZERTAINLY/blob/develop/LICENSE.md
  version: 1.5.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Credential Management
  description: Credential Management API
paths:
  /v1/credentials/{uuid}:
    get:
      tags:
      - Credential Management
      summary: Details of a Credentials
      operationId: getCredential
      parameters:
      - name: uuid
        in: path
        description: Credential UUID
        required: true
        schema:
          type: string
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Credential details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
    put:
      tags:
      - Credential Management
      summary: Edit Credential
      operationId: editCredential
      parameters:
      - name: uuid
        in: path
        description: Credential UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialUpdateRequestDto'
        required: true
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "200":
          description: Credential updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDto'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
    delete:
      tags:
      - Credential Management
      summary: Delete Credential
      operationId: deleteCredential
      parameters:
      - name: uuid
        in: path
        description: Credential UUID
        required: true
        schema:
          type: string
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Credential deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/credentials:
    get:
      tags:
      - Credential Management
      summary: List of All Credentials
      operationId: listCredentials
      responses:
        "200":
          description: List of all Credentials
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialDto'
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
    post:
      tags:
      - Credential Management
      summary: Add Credential
      operationId: createCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequestDto'
        required: true
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "201":
          description: New Credential added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UuidDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
    delete:
      tags:
      - Credential Management
      summary: Delete multiple Credentials
      operationId: bulkDeleteCredential
      requestBody:
        description: Credential UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "422":
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "200":
          description: Credentials deleted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
        "204":
          description: No Content
  /v1/credentials/{uuid}/enable:
    patch:
      tags:
      - Credential Management
      summary: Enable Credential
      operationId: enableCredential
      parameters:
      - name: uuid
        in: path
        description: Credential UUID
        required: true
        schema:
          type: string
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "204":
          description: Credential enabled
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
  /v1/credentials/{uuid}/disable:
    patch:
      tags:
      - Credential Management
      summary: Disable Credential
      operationId: disableCredential
      parameters:
      - name: uuid
        in: path
        description: Credential UUID
        required: true
        schema:
          type: string
      responses:
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        "500":
          description: Internal Server Error
        "204":
          description: Credential disabled
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationServiceExceptionDto'
components:
  schemas:
    AttributeContentType:
      type: string
      description: Content Type of the Attribute
      example: Attribute
      enum:
      - string
      - integer
      - secret
      - file
      - boolean
      - credential
      - date
      - float
      - object
      - text
      - time
      - datetime
    AttributeType:
      type: string
      description: Type of the Attribute
      enum:
      - data
      - group
      - info
      - meta
      - custom
    BaseAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      description: Content of the Attribute
      oneOf:
      - $ref: '#/components/schemas/BooleanAttributeContent'
      - $ref: '#/components/schemas/CredentialAttributeContent'
      - $ref: '#/components/schemas/DateAttributeContent'
      - $ref: '#/components/schemas/DateTimeAttributeContent'
      - $ref: '#/components/schemas/FileAttributeContent'
      - $ref: '#/components/schemas/FloatAttributeContent'
      - $ref: '#/components/schemas/IntegerAttributeContent'
      - $ref: '#/components/schemas/ObjectAttributeContent'
      - $ref: '#/components/schemas/SecretAttributeContent'
      - $ref: '#/components/schemas/StringAttributeContent'
      - $ref: '#/components/schemas/TextAttributeContent'
      - $ref: '#/components/schemas/TimeAttributeContent'
    BooleanAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
    CredentialAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/CredentialDto'
    CredentialDto:
      required:
      - attributes
      - connectorName
      - connectorUuid
      - customAttributes
      - enabled
      - kind
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/ResponseAttributeDto'
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: '#/components/schemas/ResponseAttributeDto'
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        connectorUuid:
          type: string
          description: UUID of Credential provider Connector
        connectorName:
          type: string
          description: Name of Credential provider Connector
      description: Credential attribute content data
    CredentialUpdateRequestDto:
      required:
      - attributes
      - customAttributes
      type: object
      properties:
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
    DateAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Date attribute value
          format: date
    DateTimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: DateTime attribute value
          format: date-time
    FileAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/FileAttributeContentData'
    FileAttributeContentData:
      required:
      - content
      - fileName
      - mimeType
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          $ref: '#/components/schemas/MimeType'
      description: File attribute content data
    FloatAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          description: Float attribute value
          format: float
    IntegerAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          description: Integer attribute value
          format: int32
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
      description: Time attribute value
    MimeType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        wildcardType:
          type: boolean
        wildcardSubtype:
          type: boolean
        concrete:
          type: boolean
        charset:
          type: string
      description: Type of the file uploaded
    ObjectAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
    RequestAttributeDto:
      required:
      - content
      - name
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
      description: Request attribute to send attribute content for object
    ResponseAttributeDto:
      required:
      - contentType
      - label
      - name
      - type
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: '#/components/schemas/AttributeType'
        contentType:
          $ref: '#/components/schemas/AttributeContentType'
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: '#/components/schemas/BaseAttributeContent'
      description: Response attribute with content for object it belongs to
    SecretAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/SecretAttributeContentData'
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
      description: Secret attribute content data
    StringAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
    TextAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
    TimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: '#/components/schemas/LocalTime'
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    CredentialRequestDto:
      required:
      - attributes
      - connectorUuid
      - customAttributes
      - kind
      - name
      type: object
      properties:
        name:
          type: string
          description: Credential name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: '#/components/schemas/RequestAttributeDto'
        connectorUuid:
          type: string
          description: UUID of Credential provider Connector
    UuidDto:
      required:
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
