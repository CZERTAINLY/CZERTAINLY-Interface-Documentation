name: Generate OpenAPI Docs
on:
  push:
    branches:
      - develop # or the name of your main branch
    tags:
      - '*'
  workflow_dispatch:

jobs:
  test_job:
    runs-on: ubuntu-latest
    name: Generate
    steps:

      # first checkout your code
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn --batch-mode --update-snapshots install
      - name: Setup npm
        uses: actions/setup-node@v4
        with:
          node-version: 14.x
      - name: Install redoc-cli
        run: |
          yarn global add redoc-cli
      - name: Bundle yaml files
        run: |
          ./bundle.sh
          
      # then use redoc-cli-github-action to generate your HTML bundle
      #- name: redoc-cli doc-openapi-ca-connector
      #  uses: seeebiii/redoc-cli-github-action@v10
      #  with:
      #    args: 'bundle ./openapi/doc-openapi-ca-connector.yaml -o ./openapi/doc-openapi-ca-connector.html --options.theme.logo.gutter=20px'
      #- name: redoc-cli doc-openapi-credential-provider
      #  uses: seeebiii/redoc-cli-github-action@v10
      #  with:
      #    args: 'bundle ./openapi/doc-openapi-credential-provider.yaml -o ./openapi/doc-openapi-credential-provider.html --options.theme.logo.gutter=20px'    
      #- name: redoc-cli doc-openapi-credential-provider
      #  uses: seeebiii/redoc-cli-github-action@v10
      #  with:
      #    args: 'bundle ./openapi/doc-openapi-discovery-provider.yaml -o ./openapi/doc-openapi-discovery-provider.html --options.theme.logo.gutter=20px'
          
      - name: Copy
        run: |
          mkdir -p ../docs/$GITHUB_REF_NAME
          cp ./openapi/*.html ../docs/$GITHUB_REF_NAME
          cp ./openapi/*.yaml ../docs/$GITHUB_REF_NAME
          cp ./index.html ../docs/$GITHUB_REF_NAME
          cp ./style.css ../docs/$GITHUB_REF_NAME
          mkdir ../docs//$GITHUB_REF_NAME/images
          cp ./images/czertainly_color_H.svg ../docs/$GITHUB_REF_NAME/images
          cp ./images/czertainly_white_H.svg ../docs/$GITHUB_REF_NAME/images
          cp ./images/czertainly_sign_color.svg ../docs/$GITHUB_REF_NAME/images
          cp ./CNAME ../docs
          cp ./.nojekyll ../docs
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Copy back
        run: |
          cp -r ../docs/* ./
          cp ../docs/.nojekyll ./
      - name: Commit
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'interfaces@users.noreply.github.com'
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            echo "there are changes";
            git commit -am "Automatically generated docs"
            git push
          else
            echo "no changes";
          fi
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          ref: openapi
#      - name: Copy back
#        run: |
#          cp ../docs/*.yaml ./
#          cp ../docs/.nojekyll ./
#          cp ../docs/CNAME ./
#      - name: Commit
#        run: |
#          git config --global user.name 'GitHub Actions'
#          git config --global user.email 'interfaces@users.noreply.github.com'
#          git add -A
#          if [ -n "$(git status --porcelain)" ]; then
#            echo "there are changes";
#            git commit -am "Automatically generated docs"
#            git push
#          else
#            echo "no changes";
#          fi