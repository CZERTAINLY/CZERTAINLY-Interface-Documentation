name: Test generating docs
on:
  push:
    branches:
      - develop # or the name of your main branch
  workflow_dispatch:

jobs:
  test_job:
    runs-on: ubuntu-latest
    name: Test
    steps:

      # first checkout your code
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # value of repository/id field of the pom.xml
          server-username: GITHUB_USER_REF
          server-password: GITHUB_TOKEN_REF
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          GITHUB_USER_REF: ${{ secrets.GH_PACKAGE_REPO_USERNAME }}
          GITHUB_TOKEN_REF: ${{ secrets.GH_PACKAGE_REPO_PASSWORD }}
        run: mvn --batch-mode --update-snapshots install

      # then use redoc-cli-github-action to generate your HTML bundle
      - name: redoc-cli doc-openapi-ca-connector
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: 'bundle ./openapi/doc-openapi-ca-connector.yaml -o ./openapi/doc-openapi-ca-connector.html --options.theme.logo.gutter=20px'
      - name: redoc-cli doc-openapi-credential-provider
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: 'bundle ./openapi/doc-openapi-credential-provider.yaml -o ./openapi/doc-openapi-credential-provider.html --options.theme.logo.gutter=20px'    
      
      - name: Copy
        run: |
          mkdir ../docs
          cp ./openapi/*.html ../docs
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: test
      - name: Copy back
        run: |
          cp ../docs/*.html ./
      - name: Commit
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'interfacese@users.noreply.github.com'
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            echo "there are changes";
            git commit -am "Automatically generated docs"
            git push
          else
            echo "no changes";
          fi
